[{"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\index.js":"1","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\reducers\\authReducer.js":"2","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\types.js":"3","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\App.js":"4","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Offers.js":"5","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Header.js":"6","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Home.js":"7","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Services.js":"8","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Login\\Login.js":"9","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Login\\SignUp.js":"10","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Contact.js":"11","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\index.js":"12","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Login\\GoogleLog.js":"13","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Appointment.js":"14","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Footer.js":"15","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Hero.js":"16","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Banner.js":"17","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Title.js":"18","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Serv.js":"19","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\store.js":"20","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\reducers\\combineReducer.js":"21","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Navbar\\Nav-bar.js":"22","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Routes\\Routes.js":"23","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Routes\\ProtectedRoute.js":"24","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Routes\\RoutesNavbar.js":"25","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Profile\\UserProfile.js":"26","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\CustomToolbar.js":"27","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\useCustomForm.js":"28","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\ProfilePic.js":"29","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\CustomSnackbar.js":"30","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Profile\\useSettings.js":"31","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\PopUp.js":"32","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Profile\\EditDetails.js":"33","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\Admin.js":"34","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\AdminDashboard.js":"35","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\booking-actions.js":"36","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\booking-types.js":"37","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\reducers\\booking-reducers.js":"38","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\UserRoles.js":"39","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\ProductsTable.js":"40","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\ServicesTable.js":"41","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\AddItem.js":"42","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\useTableActions.js":"43","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\ImageUploader.js":"44","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Booking\\BookService.js":"45","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Booking\\BookingCart.js":"46","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Booking\\OrderPage.js":"47","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\HoverCart.js":"48","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Payment\\Payment.js":"49","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Payment\\useKhaltiCheckout.js":"50","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\AppointmentTable.js":"51","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Chat.js":"52","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\userTable.js":"53","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\UserTable.js":"54"},{"size":742,"mtime":1614674546043,"results":"55","hashOfConfig":"56"},{"size":1198,"mtime":1615276003553,"results":"57","hashOfConfig":"56"},{"size":213,"mtime":1618122917553,"results":"58","hashOfConfig":"56"},{"size":709,"mtime":1616740328483,"results":"59","hashOfConfig":"56"},{"size":349,"mtime":1614425760472,"results":"60","hashOfConfig":"56"},{"size":147,"mtime":1608268087187,"results":"61","hashOfConfig":"56"},{"size":565,"mtime":1614424982809,"results":"62","hashOfConfig":"56"},{"size":2200,"mtime":1618217925315,"results":"63","hashOfConfig":"56"},{"size":6877,"mtime":1615279281455,"results":"64","hashOfConfig":"56"},{"size":8887,"mtime":1618214210281,"results":"65","hashOfConfig":"56"},{"size":2457,"mtime":1618124025124,"results":"66","hashOfConfig":"56"},{"size":867,"mtime":1616320020694,"results":"67","hashOfConfig":"56"},{"size":784,"mtime":1608535196032,"results":"68","hashOfConfig":"56"},{"size":161,"mtime":1608268678418,"results":"69","hashOfConfig":"56"},{"size":1467,"mtime":1614411019823,"results":"70","hashOfConfig":"56"},{"size":197,"mtime":1614406087347,"results":"71","hashOfConfig":"56"},{"size":276,"mtime":1614406034858,"results":"72","hashOfConfig":"56"},{"size":200,"mtime":1614406359288,"results":"73","hashOfConfig":"56"},{"size":2070,"mtime":1614679732703,"results":"74","hashOfConfig":"56"},{"size":699,"mtime":1614679936387,"results":"75","hashOfConfig":"56"},{"size":302,"mtime":1615707191645,"results":"76","hashOfConfig":"56"},{"size":9328,"mtime":1617252999313,"results":"77","hashOfConfig":"56"},{"size":1652,"mtime":1618124870158,"results":"78","hashOfConfig":"56"},{"size":856,"mtime":1614838002263,"results":"79","hashOfConfig":"56"},{"size":2873,"mtime":1618488636545,"results":"80","hashOfConfig":"56"},{"size":6374,"mtime":1618216282601,"results":"81","hashOfConfig":"56"},{"size":520,"mtime":1615275209395,"results":"82","hashOfConfig":"56"},{"size":5330,"mtime":1617609596795,"results":"83","hashOfConfig":"56"},{"size":2729,"mtime":1615273704785,"results":"84","hashOfConfig":"56"},{"size":609,"mtime":1614785568000,"results":"85","hashOfConfig":"56"},{"size":3135,"mtime":1615278915327,"results":"86","hashOfConfig":"56"},{"size":1000,"mtime":1615278470135,"results":"87","hashOfConfig":"56"},{"size":4592,"mtime":1618487598403,"results":"88","hashOfConfig":"56"},{"size":1828,"mtime":1618124080117,"results":"89","hashOfConfig":"56"},{"size":6077,"mtime":1616318532308,"results":"90","hashOfConfig":"56"},{"size":4622,"mtime":1618560195486,"results":"91","hashOfConfig":"56"},{"size":833,"mtime":1618554450093,"results":"92","hashOfConfig":"56"},{"size":4498,"mtime":1618554987005,"results":"93","hashOfConfig":"56"},{"size":9151,"mtime":1618560239534,"results":"94","hashOfConfig":"56"},{"size":5883,"mtime":1615708499290,"results":"95","hashOfConfig":"56"},{"size":5571,"mtime":1617290877084,"results":"96","hashOfConfig":"56"},{"size":4692,"mtime":1617290332498,"results":"97","hashOfConfig":"56"},{"size":5730,"mtime":1617292526816,"results":"98","hashOfConfig":"56"},{"size":2747,"mtime":1616914539227,"results":"99","hashOfConfig":"56"},{"size":2930,"mtime":1618497765653,"results":"100","hashOfConfig":"56"},{"size":5972,"mtime":1618557853857,"results":"101","hashOfConfig":"56"},{"size":8620,"mtime":1618559347916,"results":"102","hashOfConfig":"56"},{"size":1308,"mtime":1617964026425,"results":"103","hashOfConfig":"56"},{"size":3629,"mtime":1618554771318,"results":"104","hashOfConfig":"56"},{"size":1059,"mtime":1618077315111,"results":"105","hashOfConfig":"56"},{"size":3761,"mtime":1618125663891,"results":"106","hashOfConfig":"56"},{"size":0,"mtime":1618488568806,"results":"107","hashOfConfig":"56"},{"size":3677,"mtime":1618559408426,"results":"108","hashOfConfig":"56"},{"size":3664,"mtime":1618560382288,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"14uhpq7",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"112"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"112"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"112"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"112"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"112"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"112"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"242","messages":"243","errorCount":5,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\index.js",[],["246","247"],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\reducers\\authReducer.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\types.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\App.js",["248","249","250","251","252"],"import React from 'react';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport { BrowserRouter, Router, Route, Switch } from 'react-router-dom';\r\nimport { useSelector} from 'react-redux';\r\n\r\n\r\n\r\nimport Footer from './components/Footer';\r\n\r\nimport Routes from \"./Routes/Routes\";\r\n\r\nconst App = () => {\r\n    const token = useSelector((state) => state.login.authToken);\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n              \r\n              <Routes />\r\n            \r\n            \r\n            \r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Offers.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Header.js",[],["253","254"],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Home.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Services.js",["255","256","257","258"],"import React from \"react\";\r\nimport Hero from \"./Hero\";\r\nimport Banner from \"./Banner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookService from \"./Booking/BookService\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"../Payment/payment.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { vehicleType } from \"../actions/booking-actions\";\r\n\r\n//import RoomsContainer from '../components/RoomsContainer';\r\nconst Services = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <Hero hero=\"servicesHero\"></Hero>\r\n      <Banner title=\"Our Services\" subtitle=\"Best in Town\">\r\n        <Link to=\"/\" className=\"btn btn-warning\">\r\n          RETURN HOME\r\n        </Link>\r\n      </Banner>\r\n      <Typography align=\"center\" variant=\"h5\">\r\n        Choose Vehicle Type\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"3rem\" }}\r\n      >\r\n        <Grid item xs={6}>\r\n          <Link to=\"/hamro/bike/booking\">\r\n            <Paper\r\n              className=\"paper\"\r\n              onClick={() => dispatch(vehicleType(\"bike\"))}\r\n            >\r\n              <img\r\n                src={require(\"../images/other/cash-in-hand.jpeg\").default}\r\n                alt=\"cash in hand\"\r\n                className=\"image-payment\"\r\n              />\r\n            </Paper>\r\n          </Link>\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Bike\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Link\r\n            to=\"/hamro/car/booking\"\r\n            onClick={() => dispatch(vehicleType(\"car\"))}\r\n          >\r\n            <Paper className=\"paper\">\r\n              <img\r\n                src={require(\"../images/other/online-payment.jpeg\").default}\r\n                alt=\"online payment\"\r\n                className=\"image-payment\"\r\n              />\r\n            </Paper>\r\n          </Link>\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Car\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Login\\Login.js",["259","260","261","262","263","264"],"import {\r\n    Typography,\r\n    Box,\r\n    Paper,\r\n    TextField,\r\n    makeStyles,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    Container\r\n  } from \"@material-ui/core\";\r\n  \r\n  import React, { useEffect, useState } from \"react\";\r\n  import { useDispatch, useSelector} from 'react-redux';\r\n  import { userData, authToken} from '../../actions/index';\r\n\r\n  \r\n\r\n  \r\n  import { Formik, Form } from \"formik\";\r\n  import * as Yup from \"yup\";\r\n  import axios from \"axios\";\r\n  \r\n//   import GLogin from \"./GLogin\";\r\n//   import FLogin from \"./FLogin\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n  \r\n  import {FcHome} from 'react-icons/fc';\r\n\r\n  import GoogleLog from './GoogleLog';\r\n  \r\n  \r\n  \r\n  \r\n  const useStyles = makeStyles({\r\n    contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n    paper: {\r\n      width: \"33rem\",\r\n      padding: \"2.5rem\", \r\n    },\r\n    box: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"2rem\",\r\n    },\r\n    submitBtn: {\r\n      textAlign: \"center\",\r\n      marginTop: \"1.4rem\",\r\n    },\r\n    signIn: {\r\n      marginTop: \"-1rem\",\r\n      paddingBottom: \"1rem\",\r\n      marginLeft: \"18rem\",\r\n    },\r\n    link: {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n      \"&:hover\": {\r\n        color: \"inherit\",\r\n        textDecoration: \"none\",\r\n      },\r\n    },\r\n  });\r\n  \r\n  axios.defaults.withCredentials = true;\r\n  \r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"Invalid Email!!\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n    \r\n  });\r\n  \r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    loggedIn: false,\r\n  };\r\n  \r\n  const Login=() => {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [response, setResponse] = useState();\r\n    const [snackbar, setSnackbar] = useState(false);\r\n    const [snackType, setSnackType] = useState();\r\n\r\n    const  dispatch = useDispatch();\r\n    const Token = useSelector((state) => state.login.authToken);\r\n  \r\n    const onSubmit = (values) => {\r\n      axios\r\n        .post(\"/hamro/login\", {\r\n          values,\r\n        })\r\n        .then((response) => {\r\n          setResponse(response.data.message);\r\n          setSnackType(response.data.type);\r\n          if (response.data.auth === true) {\r\n            dispatch(userData(response.data.result));\r\n            dispatch(authToken(response.data.token));\r\n          }\r\n        });\r\n    };\r\n\r\n    useEffect(async () => {\r\n       await axios.get(\"/hamro/login\").then((response) => {\r\n        if (response.data.loggedIn === true && Token != null) {\r\n          setSnackbar(true);\r\n          setResponse(response.data.message);\r\n          setSnackType(response.data.type);\r\n          setTimeout(() => {\r\n            history.push(\"/\");\r\n          }, 1500);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    const userAuthenticated = async () => {\r\n      await axios\r\n        .post(\"/isUserAuth\")\r\n        .then((response) => {\r\n          response.data.auth === true &&\r\n            setTimeout(() => {\r\n              history.push(\"/\");\r\n            }, 1500);\r\n        })\r\n        .catch((err) => console.log(err));\r\n  \r\n      axios.defaults.headers.common[\"authorization\"] = Token;\r\n    };\r\n  \r\n    \r\n\r\n    \r\n  \r\n    return (\r\n        <div className={classes.background}>\r\n        <Container className={classes.contactContainer}>\r\n        <Typography variant=\"h4\" style={{ textAlign: \"center\", color: \"#c28285\" }}>\r\n        <FcHome  style={{margin:'0 0.5rem -0.2rem 0' }} />Hamro Workshop\r\n        </Typography>\r\n        <Box className={classes.box}>\r\n          <Paper className={classes.paper}>\r\n          <Link  to=\"/hamro/signup\" className={classes.link}>\r\n          <Typography\r\n            align=\"right\"\r\n            type=\"button\"\r\n            variant=\"body2\"\r\n            className={classes.signIn}\r\n          >\r\n            Create an account\r\n          </Typography>\r\n        </Link>\r\n        \r\n\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({ errors, handleChange, touched, values, setFieldValue }) => (\r\n                <Form>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        label=\"Your Email\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        \r\n                        error={errors.email && touched.email}\r\n                        onChange={handleChange}\r\n                        helperText={\r\n                          errors.email && touched.email ? (\r\n                            <Typography style={{ color: \"#f5f5f5\" }}>\r\n                              {errors.email}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {\" \"}\r\n                      <TextField\r\n                        label=\"Password\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        error={errors.password && touched.password}\r\n                        helperText={\r\n                          errors.password && touched.password ? (\r\n                            <Typography style={{ color: \"#f5f5f5\" }}>\r\n                              {errors.password}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    \r\n                  </Grid>\r\n                  <Box textAlign=\"center\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      size=\"large\"\r\n                      className={classes.submitBtn}\r\n                      onClick={() => {\r\n                        userAuthenticated();\r\n                        setSnackbar(true);\r\n                      }}\r\n                    >\r\n                      Login\r\n                    </Button>\r\n                    \r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n  \r\n            <hr style={{ backgroundColor: \"white\" }} />\r\n            <Box textAlign= 'center'><GoogleLog  /></Box>\r\n          </Paper>\r\n          \r\n          \r\n        </Box>\r\n      </Container>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n  \r\n  export default Login;\r\n  ","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Login\\SignUp.js",["265","266","267","268","269","270","271"],"import {\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\n//   import GLogin from \"./GLogin\";\r\n//   import FLogin from \"./FLogin\";\r\n\r\nimport { Switch, Link, Route } from \"react-router-dom\";\r\nimport { FcHome } from \"react-icons/fc\";\r\n\r\nconst useStyles = makeStyles({\r\n  contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n  paper: {\r\n    width: \"33rem\",\r\n    padding: \"2.5rem\",\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  submitBtn: {\r\n    textAlign: \"center\",\r\n    marginTop: \"1.4rem\",\r\n  },\r\n  login: {\r\n    marginTop: \"-1rem\",\r\n    paddingBottom: \"1rem\",\r\n    marginLeft: \"18rem\",\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"inherit\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n});\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Username is required\"),\r\n  email: Yup.string().email().required(\"Invalid Email!!\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n  confirmPassword: Yup.string()\r\n    .required(\"Password is required\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match.\"),\r\n  phone: Yup.number().min(10).required(\"Number is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n  phone: null,\r\n  signUp: false,\r\n};\r\n\r\nconst SignUp = () => {\r\n  const [signupStatus, setSignupStatus] = useState(false);\r\n  let history = useHistory();\r\n  const Token = useSelector((state) => state.login.authToken);\r\n\r\n  useEffect(async () => {\r\n    await axios.get(\"/hamro/login\").then((response) => {\r\n      if (response.data.loggedIn === true && Token != null) {\r\n        setTimeout(() => {\r\n          history.push(\"/\");\r\n        }, 1500);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (values) => {\r\n    axios.post(\"/hamro/register\", { values }).then((response) => {\r\n      console.log(response.data.message);\r\n      setTimeout(() => {\r\n        // response.data.type === \"Successfull\" &&\r\n        history.push(\"/hamro/login\");\r\n      }, 1500);\r\n    });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.background}>\r\n      <Container className={classes.contactContainer}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          style={{ textAlign: \"center\", color: \"#c28285\" }}\r\n        >\r\n          <FcHome style={{ margin: \"0 0.5rem -0.2rem 0\" }} />\r\n          Hamro Workshop\r\n        </Typography>\r\n        <Box className={classes.box}>\r\n          <Paper className={classes.paper}>\r\n            <Link to=\"/hamro/login\" className={classes.link}>\r\n              <Typography\r\n                align=\"right\"\r\n                type=\"button\"\r\n                variant=\"body2\"\r\n                className={classes.login}\r\n              >\r\n                Login Instead\r\n              </Typography>\r\n            </Link>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({ errors, handleChange, touched, values, setFieldValue }) => (\r\n                <Form>\r\n                  <Grid container spacing={4}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        label=\"Username\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        name=\"username\"\r\n                        type=\"username\"\r\n                        id=\"username\"\r\n                        autoComplete=\"off\"\r\n                        error={errors.username && touched.username}\r\n                        onChange={handleChange}\r\n                        helperText={\r\n                          errors.username && touched.username ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.username}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        label=\"Your Email\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        error={errors.email && touched.email}\r\n                        onChange={handleChange}\r\n                        helperText={\r\n                          errors.email && touched.email ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.email}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {\" \"}\r\n                      <TextField\r\n                        label=\"Password\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        error={errors.password && touched.password}\r\n                        helperText={\r\n                          errors.password && touched.password ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.password}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {\" \"}\r\n                      <TextField\r\n                        label=\"Confirm Password\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        error={\r\n                          errors.confirmPassword && touched.confirmPassword\r\n                        }\r\n                        helperText={\r\n                          errors.confirmPassword && touched.confirmPassword ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.confirmPassword}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        label=\"Phone\"\r\n                        type=\"tel\"\r\n                        name=\"phone\"\r\n                        fullWidth\r\n                        error={errors.phone && touched.phone}\r\n                        errortext={errors.phone}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Box>\r\n                      <Typography>\r\n                        <Checkbox\r\n                          style={{\r\n                            paddingLeft: \"1rem\",\r\n                            marginBottom: \"0.3rem\",\r\n                          }}\r\n                          color=\"default\"\r\n                          value={values.loggedIn}\r\n                          onChange={(value) => setFieldValue(\"signUp\", true)}\r\n                        />\r\n                        I accept the terms and conditions.\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Box textAlign=\"center\">\r\n                    <Button\r\n                      type=\"submit\"\r\n                      size=\"large\"\r\n                      className={classes.submitBtn}\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n            <hr style={{ backgroundColor: \"white\" }} />\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default SignUp;\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Contact.js",["272"],"import React from \"react\";\r\nimport Hero from \"./Hero\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div className=\"container contact\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8 col-12 mx-auto\">\r\n          <div className=\"card shadow-lg border-0 p-4\">\r\n            <h1 className=\"text-center bg-dark text-white display-4 d-inline-block\">\r\n              Contact us\r\n            </h1>\r\n            <div className=\"form-group my-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 col-12 mx-auto my-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control-lg\"\r\n                    placeholder=\"First Name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-12 mx-auto my-2\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control-lg\"\r\n                    placeholder=\"last Name\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group mb-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 col-12 mx-auto my-2\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control-lg\"\r\n                    placeholder=\"Email Address\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 col-12 mx-auto my-2\">\r\n                  <input\r\n                    type=\"tel\"\r\n                    className=\"form-control-lg\"\r\n                    placeholder=\"Phone no.\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-11\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  row=\"20\"\r\n                  placeholder=\"Your message\"\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5 col-md-6 col-12 mx-auto\">\r\n              <button className=\"btn btn-outline-dark btn-lg btn-block\">\r\n                Send Message\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Contact;\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\index.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Login\\GoogleLog.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Appointment.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Footer.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Hero.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Banner.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Title.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Serv.js",["273","274"],"\r\nimport React, { Component } from 'react'\r\nimport Title from './Title'\r\nimport { FaHiking , FaShuttleVan,FaBeer} from 'react-icons/fa'\r\nimport {GiAutoRepair} from 'react-icons/gi'\r\nimport {AiFillCar} from 'react-icons/ai'\r\nimport {MdLocalCarWash} from 'react-icons/md'\r\nexport default class Serv extends Component {\r\n    state={\r\n        services:[\r\n            {\r\n                icon:<AiFillCar/>,\r\n                title: \"Vehicle Servicing\",\r\n                info: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur\"\r\n            },\r\n            {\r\n                icon:<GiAutoRepair/>,\r\n                title: \"Vehicle Repair\",\r\n                info: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur\"\r\n            },\r\n            {\r\n                icon:<FaShuttleVan/>,\r\n                title: \"Ceramic Coating \",\r\n                info: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur\"\r\n            },\r\n            {\r\n                icon:<MdLocalCarWash/>,\r\n                title: \"Car Wash\",\r\n                info: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Pariatur\"\r\n            },\r\n\r\n        ]\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid services\">\r\n             <Title  title=\"Services\" />\r\n                <div className=\"row\">\r\n                   {this.state.services.map((item, index) => {\r\n                      return(\r\n                        <div className=\"col-md-4 col-lg-3 col-12 mx-auto my-3\" key={index}>\r\n                            <div className=\"card shadow-lg border-0 p-4\">\r\n                                <article className=\"service\">\r\n                                <span>{item.icon}</span>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.info}</p>\r\n                                </article>              \r\n                           </div>\r\n                        </div>\r\n                      )\r\n                   })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\store.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\reducers\\combineReducer.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Navbar\\Nav-bar.js",["275","276","277","278"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  AppBar,\r\n  Drawer,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Badge,\r\n  Paper,\r\n  Avatar,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { HashLink as Link } from \"react-router-hash-link\";\r\nimport {\r\n  AiOutlineShoppingCart,\r\n  AiOutlineLogout,\r\n  AiOutlineCloseCircle,\r\n} from \"react-icons/ai\";\r\nimport { HiOutlineUserCircle } from \"react-icons/hi\";\r\nimport { IoIosMenu } from \"react-icons/io\";\r\n\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport useWindowScrollPosition from \"@rehooks/window-scroll-position\";\r\n\r\nimport './Navbar.scss';\r\n//import MenuDropdown from \"../common/MenuDropdown\";\r\nimport { logout, userData } from \"../../actions/index\";\r\n\r\nfunction Navbar({ cart, userData }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [change, setChange] = useState(false);\r\n  const changePosition = 80;\r\n\r\n  //for showing navbar on slide\r\n  let position = useWindowScrollPosition();\r\n\r\n  if (position.y > changePosition && !change) {\r\n    setChange(true);\r\n  }\r\n  if (position.y <= changePosition && change) {\r\n    setChange(false);\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [cartCount, setCartCount] = useState(null);\r\n  //hook to show number of item in cart\r\n  useEffect(() => {\r\n    let count = 0;\r\n    cart?.forEach((item) => (count += item.qty));\r\n    setCartCount(count);\r\n  }, [cart, cartCount]);\r\n\r\n  //style\r\n  let appBarStyle = {\r\n    backgroundColor: change ? \"black\" : \"transparent\",\r\n    transition: \"600ms ease\",\r\n    boxShadow: \"none\",\r\n  };\r\n\r\n  let navLinkStyle = {\r\n    color: change ? \"white\" : \"white\",\r\n    fontWeight: \"bold\",\r\n    letterSpacing: \"3px\",\r\n  };\r\n\r\n  const handleDrawer = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const NavLink = ({ path, children }) => {\r\n    return (\r\n      <li>\r\n        <Link className=\"link\" smooth to={path}>\r\n          <Typography component=\"span\" style={navLinkStyle} variant=\"body1\">\r\n            {children}\r\n          </Typography>\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar sticky=\"true\" style={appBarStyle}>\r\n        <Container>\r\n          <Grid container component=\"div\" style={{ paddingTop: \"1.3rem\" }}>\r\n            <Grid item xs={3} sm={2}>\r\n              <Link to=\"/\">\r\n                <Box\r\n                  height=\"3rem\"\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  marginTop=\"-0.8rem\"\r\n                  marginLeft=\"1.5rem\"\r\n                >\r\n                  <img\r\n                    //src={require(\"../../images/other/logo-white.png\").default}\r\n                    //alt=\"logo\"\r\n                  />\r\n                </Box>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={7} sm={8}>\r\n              <ul className=\"nav-ul d-none  d-md-flex\">\r\n                <NavLink path=\"/#\">HOME</NavLink>\r\n                <NavLink path=\"/hamro/services\">SERVICES</NavLink>\r\n                <NavLink path=\"/hamro/offers\">OFFERS</NavLink>\r\n                <NavLink path=\"/hamro/contact\">CONTACT</NavLink>\r\n              </ul>\r\n            </Grid>\r\n            <Grid item xs={2} sm={2} className=\"d-none d-sm-flex\">\r\n              <ul className=\"icons-ul \">\r\n                <li style={{ fontWeight: \"bold\", letterSpacing: \"3px\" }}>\r\n                  <Box className=\"dropdown-icon\">\r\n                    <span>Profile</span>\r\n                    <HiOutlineUserCircle size={22} />\r\n                    <Paper\r\n                      className=\"dropdown-content-profile\"\r\n                      component=\"span\"\r\n                    >\r\n                      <Link to=\"/hamro/user\" className=\"link\">\r\n                        <Box\r\n                          padding=\"0.5rem\"\r\n                          display=\"flex\"\r\n                          component=\"span\"\r\n                          className=\"icon-styless\"\r\n                        >\r\n                          {userData?.length > 0 ? ( \r\n                            userData.map((item) => (\r\n                              <Avatar\r\n                                style={{ width: \"1.7rem\", height: \"1.7rem\" }}\r\n                                //src={\r\n                                  //item.image != null\r\n                                    //? require(`../../images/profile/${item.image}`)\r\n                                        //.default\r\n                                    //: null\r\n                               // }\r\n                              />\r\n                            ))\r\n                          ) : (\r\n                            <Avatar\r\n                              style={{ width: \"1.7rem\", height: \"1.7rem\" }}\r\n                            />\r\n                          )}\r\n\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            style={{\r\n                              marginLeft: \"0.6rem\",\r\n                              marginTop: \"0.2rem\",\r\n                            }}\r\n                          >\r\n                            {userData?.length > 0 ? (\r\n                              userData.map((item) => (\r\n                                <span key={item.User_ID}>{item.User_Name}</span>\r\n                              ))\r\n                            ) : (\r\n                              <span>Profile</span>\r\n                            )}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Link>\r\n                      <Divider />\r\n                      \r\n                        <Box\r\n                          component=\"div\"\r\n                          padding=\"0.5rem\"\r\n                          display=\"flex\"\r\n                          className=\"icon-styless\"\r\n                          onClick={() => dispatch(logout())}\r\n                        >\r\n                        {userData.length > 0 ? (\r\n                          userData.map((item) => (\r\n                            <Link to=\"\" key={item.user_id} className=\"link\">\r\n                              <AiOutlineLogout size={22} />\r\n                              <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\"\r\n                                style={{\r\n                                  marginLeft: \"0.8rem\",\r\n                                }}\r\n                              >\r\n                                Logout\r\n                              </Typography>\r\n                            </Link>\r\n                          ))\r\n                        ) : (\r\n                          <Link to=\"/hamro/login\" className=\"link\">\r\n                            <AiOutlineLogout size={22} />\r\n                            <Typography\r\n                              component=\"span\"\r\n                              variant=\"body2\"\r\n                              style={{\r\n                                marginLeft: \"0.8rem\",\r\n                              }}\r\n                            >\r\n                              LogIn\r\n                            </Typography>\r\n                          </Link>\r\n                        )}\r\n                          \r\n                        </Box>\r\n                      \r\n                    </Paper>\r\n                  </Box>\r\n                </li>\r\n\r\n                \r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n          <IoIosMenu\r\n            size={26}\r\n            onClick={handleDrawer}\r\n            style={{ marginTop: \"-2.5rem\" }}\r\n            className=\"d-flex d-sm-none menu-icon\"\r\n          />\r\n        </Container>\r\n      </AppBar>\r\n      <Drawer anchor=\"right\" open={open} onClose={handleClose}>\r\n        <Box style={{ width: \"16.5rem\" }}>\r\n          <Container style={{ marginTop: \"1rem\" }}>\r\n            <Typography variant=\"h6\" component=\"span\">\r\n              <AiOutlineCloseCircle style={{ marginBottom: \"0.3rem\" }} /> Close\r\n            </Typography>\r\n            <hr\r\n              style={{\r\n                marginTop: \"0.3rem\",\r\n                marginBottom: \"0.5rem\",\r\n                backgroundColor: \"white\",\r\n              }}\r\n            />\r\n            <ul className=\"drawer-navlinks\">\r\n              <li>\r\n                <Link path=\"/#\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">HOME</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/#services\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">SERVICES</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/store\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">STORE</Typography>\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link path=\"/#contact\" className=\"drawer-links\">\r\n                  <Typography variant=\"body1\">CONTACT</Typography>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </Container>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    \r\n    userData: state.login?.userData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Routes\\Routes.js",["279","280"],"import React from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"../components/Login/Login\";\r\n\r\nimport SignUp from \"../components/Login/SignUp\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Payment from \"../Payment/Payment\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\n//import Payment from \"../components/Payment/Payment\";\r\nimport RoutesNavbar from \"./RoutesNavbar\";\r\nimport Admin from \"../components/Admin/Admin\";\r\n//import Admin from \"../components/Admin/Admin\";\r\nimport UserRoles from \"../components/Admin/UserRoles\";\r\nimport ProductsTable from \"../components/Admin/ProductsTable\";\r\nimport ServicesTable from \"../components/Admin/ServicesTable\";\r\nimport AppointmentTable from \"../components/Admin/AppointmentTable\";\r\n\r\nexport default function Routes() {\r\n  const token = useSelector((state) => state.login.authToken);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/hamro/login\" component={Login} />\r\n      <Route exact path=\"/hamro/signup\" component={SignUp} />\r\n      <ProtectedRoute\r\n        path=\"/admin/service\"\r\n        isAuth={token}\r\n        component={ServicesTable}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin/booking\"\r\n        isAuth={token}\r\n        component={AppointmentTable}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/admin/userRole\"\r\n        isAuth={token}\r\n        component={UserRoles}\r\n      />\r\n      <ProtectedRoute\r\n        path=\"/hamro/payment\"\r\n        isAuth={token}\r\n        component={Payment}\r\n      />\r\n      <ProtectedRoute path=\"/admin\" isAuth={token} component={Admin} />\r\n\r\n      <RoutesNavbar />\r\n    </Switch>\r\n  );\r\n}\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Routes\\ProtectedRoute.js",["281","282","283"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute(props) {\r\n  const role = useSelector((state) => state.login.role);\r\n\r\n  const { isAuth: isAuth, permission, component: Component, ...rest } = props;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuth) {\r\n          // if (permission === role) {\r\n          // } else {\r\n          //   <div>SHOW ERROR PAGE</div>;\r\n          // }\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/hamro/login\", state: { from: props.location } }}\r\n            />\r\n            // state to know from whereever you called this route\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Routes\\RoutesNavbar.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Profile\\UserProfile.js",["284","285","286","287","288","289"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport useCustomForm from \"../common/useCustomForm\";\r\n\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { FaPenSquare } from \"react-icons/fa\";\r\n\r\nimport ProfilePic from \"../common/ProfilePic\";\r\nimport CustomToolbar from \"../common/CustomToolbar\";\r\n\r\nimport EditDetails from \"./EditDetails\";\r\nimport useSettings from \"./useSettings\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CustomSnackbar from \"../common/CustomSnackbar\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  profileName: {\r\n    marginTop: \"0.7rem\",\r\n    marginLeft: \"0.8rem\",\r\n  },\r\n}));\r\n\r\nfunction UserProfile() {\r\n  const classes = useStyles();\r\n  const { ChangePassword, DeleteAccount } = useSettings();\r\n\r\n  const [DetailPopUp, setDetailPopUp] = useState(false);\r\n\r\n  const [deletePopUp, setDeletePopUp] = useState(false);\r\n\r\n  const userData = useSelector((state) => state.login.userData);\r\n  const appointments = useSelector((state) => state.booking.appointments);\r\n  const [userId] = userData.map((item) => item.User_ID);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const GridContent = ({ children, xs }) => {\r\n    return (\r\n      <Grid item xs={xs}>\r\n        <Typography variant=\"body2\" style={{ paddingBottom: \"0.5rem\" }}>\r\n          {children}\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const FlexContent = ({ name, children, color = \"inherit\", onClick }) => {\r\n    return (\r\n      <Box\r\n        display=\"flex\"\r\n        type=\"button\"\r\n        justifyContent=\"space-between\"\r\n        onClick={onClick}\r\n      >\r\n        <Typography\r\n          color={color}\r\n          variant=\"body2\"\r\n          style={{ paddingBottom: \"0.7rem\" }}\r\n        >\r\n          {name}\r\n        </Typography>\r\n        <Typography color={color}>{children}</Typography>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: \"10rem\" }}>\r\n      {response && response.length > 0 && (\r\n        <CustomSnackbar\r\n          snackbarOpen={snackbar}\r\n          setSnackbar={setSnackbar}\r\n          snackType={snackType}\r\n          snackContent={response}\r\n        />\r\n      )}\r\n      {userData &&\r\n        userData.map((item) => (\r\n          <div key={item.User_ID}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              className={classes.profileName}\r\n              align=\"center\"\r\n            >\r\n              {item.User_Name}\r\n            </Typography>\r\n\r\n            <Grid\r\n              container\r\n              component=\"div\"\r\n              spacing={4}\r\n              style={{ marginTop: \"1rem\" }}\r\n            >\r\n              <Grid item xs={12} sm={6}>\r\n                <Paper>\r\n                  <CustomToolbar button=\"true\" title=\"Personal Details\">\r\n                    <Button onClick={() => setDetailPopUp(true)}>\r\n                      <FaPenSquare size={20} />\r\n                    </Button>\r\n                  </CustomToolbar>\r\n                  {/* to open popup */}\r\n                  <EditDetails\r\n                    detailPopUp={DetailPopUp}\r\n                    setDetailPopUp={setDetailPopUp}\r\n                    data={item}\r\n                    setResponse={setResponse}\r\n                    setSnackType={setSnackType}\r\n                    setSnackbar={setSnackbar}\r\n                  />\r\n\r\n                  <Box\r\n                    style={{\r\n                      padding: \"0.5rem 1.5rem 1rem 1.5rem\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Name</GridContent>\r\n                      <GridContent xs={6}>{item.User_Name}</GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Email</GridContent>\r\n                      <GridContent xs={6}>{item.Email}</GridContent>\r\n                    </Grid>\r\n                    <Grid container component=\"div\">\r\n                      <GridContent xs={4}>Phone</GridContent>\r\n                      <GridContent xs={6}>{item.phone}</GridContent>\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n              {/* settings */}\r\n              <Grid item xs={12} sm={6}>\r\n                <Paper>\r\n                  <CustomToolbar title=\"Account Settings\" />\r\n                  <Box style={{ padding: \"0.5rem 1.5rem 0.5rem 1.5rem\" }}>\r\n                    {/* <FlexContent name=\"Change Password\">\r\n                <IoIosRepeat size={18} />\r\n              </FlexContent> */}\r\n                    <FlexContent\r\n                      color=\"error\"\r\n                      name=\"Delete Account\"\r\n                      onClick={() => {\r\n                        setDeletePopUp(true);\r\n                      }}\r\n                    >\r\n                      <AiFillDelete size={18} />\r\n                    </FlexContent>\r\n                  </Box>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <DeleteAccount\r\n              deletePopUp={deletePopUp}\r\n              setDeletePopUp={setDeletePopUp}\r\n              userId={item.User_ID}\r\n            />\r\n            <Paper style={{ marginTop: \"2rem\" }}>\r\n              {item.role === \"C\" && <CustomToolbar title=\"Recent Activities\" />}\r\n              {item.role === \"C\" &&\r\n                appointments\r\n                  .filter((item) => item.User_ID === userId)\r\n                  .map((item) => (\r\n                    <Toolbar>\r\n                      Booked {item.servicesName} on{\" \"}\r\n                      {moment(item.date).format(\"YYYY/MM/DD\")} {item.time}.{\" \"}\r\n                      {item.payment == \"offline\" || item.payment === \" \"\r\n                        ? \"Payment not done.\"\r\n                        : `Chosen Payment method is ${item.payment}`}\r\n                    </Toolbar>\r\n                  ))}\r\n            </Paper>\r\n          </div>\r\n        ))}\r\n    </Container>\r\n  );\r\n}\r\nexport default withRouter(UserProfile);\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\CustomToolbar.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\useCustomForm.js",["290","291","292","293","294","295","296","297"],"import React, { useState } from \"react\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  MuiThemeProvider,\n  TextField,\n  Typography,\n  Box,\n  InputAdornment,\n} from \"@material-ui/core\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  DateTimePicker,\n} from \"@material-ui/pickers\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { BsSearch } from \"react-icons/bs\";\nimport { Select } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/core\";\nimport { List } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: \"#f44336\",\n  },\n}));\nconst customTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#87CEFA\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n  },\n});\n\nexport default function useCustomForm() {\n  const classes = useStyles();\n\n  const ErrorField = ({ children }) => (\n    <Typography className={classes.error}>{children}</Typography>\n  );\n\n  const CustomTextField = (props) => {\n    const {\n      variant = \"outlined\",\n      label,\n      name,\n      type,\n      error,\n      onChange,\n      errortext,\n      ...rest\n    } = props;\n\n    return (\n      <TextField\n        {...rest}\n        label={label}\n        variant={variant}\n        size=\"small\"\n        color=\"secondary\"\n        fullWidth\n        name={name}\n        type={type}\n        error={error}\n        onChange={onChange}\n        helperText={error ? <ErrorField>{errortext}</ErrorField> : null}\n        {...props}\n      />\n    );\n  };\n\n  // const SearchBox = (props) => {\n  //   const { label, type, placeholder, value, onChange } = props;\n  //   return (\n  //     <TextField\n  //       label={label}\n  //       type={type}\n  //       value={value}\n  //       placeholder={placeholder}\n  //       onChange={onChange}\n  //       {...props}\n  //       variant=\"outlined\"\n  //       size=\"small\"\n  //       color=\"secondary\"\n  //       fullWidth\n  //       inputProps={{\n  //         maxLength: 15,\n  //       }}\n  //       InputProps={{\n  //         startAdornment: (\n  //           <InputAdornment position=\"start\">\n  //             <BsSearch />\n  //           </InputAdornment>\n  //         ),\n  //       }}\n  //     />\n  //   );\n  // };\n\n  const CustomDatePicker = (props) => {\n    const { name, value, label, error, onChange } = props;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            label={label}\n            name={name}\n            value={value}\n            autoOk\n            {...props}\n            color=\"secondary\"\n            format=\"yyyy-dd-MM\"\n            size=\"small\"\n            onChange={onChange}\n            error={error}\n            helperText={\n              error ? <ErrorField>Date is required</ErrorField> : null\n            }\n          />\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    );\n  };\n\n  const CustomDateTime = (props) => {\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const { name, label } = props;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DateTimePicker\n            label={label}\n            name={name}\n            autoOk\n            {...props}\n            inputVariant=\"outlined\"\n            value={selectedDate}\n            color=\"secondary\"\n            onChange={handleDateChange}\n          />\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    );\n  };\n\n  const ImageInput = (props) => {\n    const { children, styling, onChange } = props;\n\n    return (\n      <>\n        <label htmlFor=\"add\" type=\"button\" style={styling}>\n          {children}\n        </label>\n        <input\n          id=\"add\"\n          type=\"file\"\n          name=\"profile\"\n          accept=\"image/*\"\n          style={{ display: \"none\" }}\n          onChange={onChange}\n        />\n      </>\n    );\n  };\n\n  const DropdownSelect = (props) => {\n    const { array, id, title, defaultValue, name, onChange, ...rest } = props;\n    return (\n      <Box>\n        <Typography variant=\"caption\">{title}</Typography>\n        <br />\n        <select\n          name={name}\n          htmlFor={id}\n          onChange={onChange}\n          {...rest}\n          style={{\n            backgroundColor: \"#424242\",\n            border: \"none\",\n            color: \"white\",\n            width: \"18rem\",\n            height: \"2.3rem\",\n            borderRadius: \"0.4rem\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <option\n            id={id}\n            value=\"\"\n            label=\"- - - - - - - \"\n            style={{ color: \"white\", border: \"none\" }}\n          />\n\n          {array.map((item) => (\n            <option\n              id={id}\n              value={item.value}\n              key={item.id}\n              style={{ color: \"white\", border: \"none\" }}\n              label={item.value}\n            />\n          ))}\n        </select>\n      </Box>\n    );\n  };\n\n  return {\n    CustomTextField,\n    ImageInput,\n    // SearchBox,\n    CustomDatePicker,\n    CustomDateTime,\n    DropdownSelect,\n  };\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\ProfilePic.js",["298","299","300","301"],"import React, { useEffect, useState } from \"react\";\n\nimport { Avatar, makeStyles, Badge, Box } from \"@material-ui/core\";\n\nimport { AiFillCamera } from \"react-icons/ai\";\nimport useCustomForm from \"../common/useCustomForm\";\nimport { Typography } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\n//import { updateProfile } from \"../../redux/Login/login-actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  imgSize: {\n    width: theme.spacing(16),\n    height: theme.spacing(16),\n  },\n  box: {\n    marginTop: theme.spacing(10),\n  },\n  //change image icon\n  changeImg: {\n    backgroundColor: \"green\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"2rem\",\n    height: \"2rem\",\n    borderRadius: \"1rem\",\n    overflow: \"hidden\",\n    \"&:hover\": {\n      width: \"3.8rem\",\n      height: \"2rem\",\n    },\n  },\n  profileName: {\n    marginTop: \"0.7rem\",\n    marginLeft: \"0.8rem\",\n  },\n}));\n\nexport default function ProfilePic({ source, userId }) {\n  const classes = useStyles();\n\n  const { ImageInput } = useCustomForm();\n\n  const dispatch = useDispatch();\n\n  const [icon, setIcon] = useState(<AiFillCamera size={18} />);\n  const [image, setImage] = useState(\n    source != null ? require(`../../images/profile/${source}`).default : null\n  );\n\n  const BadgeComponent = () => {\n    const addImage = (e) => {\n      const target = e.target.files[0];\n      const url = URL.createObjectURL(target);\n      setImage(url);\n      setIcon(<AiFillCamera size={18} />);\n      let data = new FormData();\n\n      data.append(\"profile\", target);\n      data.append(\"id\", userId);\n\n      // axios.post(`/profileImage`, data).then((res) => console.log(res));\n      //dispatch(updateProfile(data));\n    };\n    return (\n      <Box\n        type=\"button\"\n        className={classes.changeImg}\n        onMouseEnter={() => {\n          setIcon(\n            <ImageInput\n              styling={{ marginTop: \"0.5rem\" }}\n              onChange={(e) => addImage(e)}\n            >\n              <Typography variant=\"caption\" style={{ padding: \"1rem\" }}>\n                Change\n              </Typography>\n            </ImageInput>\n          );\n        }}\n        onMouseLeave={() => {\n          setIcon(<AiFillCamera size={18} />);\n        }}\n      >\n        {icon}\n      </Box>\n    );\n  };\n  return (\n    <div>\n      <Box className={classes.box} display=\"flex\" justifyContent=\"center\">\n        <Badge\n          overlap=\"circle\"\n          badgeContent={<BadgeComponent />}\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n        >\n          <Avatar alt=\"profile\" src={image} className={classes.imgSize} />\n        </Badge>\n      </Box>\n    </div>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\CustomSnackbar.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Profile\\useSettings.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\PopUp.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Profile\\EditDetails.js",["302","303"],"import React, { useState } from \"react\";\nimport { Typography, Box, Button, Grid } from \"@material-ui/core\";\nimport useCustomForm from \"../common/useCustomForm\";\n\nimport PopUp from \"../common/PopUp\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\n\nconst validationSchema = Yup.object().shape({\n  Username: Yup.string().required(),\n});\nexport default function EditDetails({\n  detailPopUp,\n  setDetailPopUp,\n  setSnackType,\n  setSnackbar,\n  setResponse,\n}) {\n  const [userId, setUserId] = useState(null);\n\n  const { CustomTextField, CustomDatePicker } = useCustomForm();\n\n  const userData = useSelector((state) => state.login.userData);\n\n  const submitHandler = (values) => {\n    axios.post(\"/updateUser\", { values: values, id: userId }).then((res) => {\n      console.log(res.data.type);\n      console.log(res.data.message);\n\n      setDetailPopUp(false);\n      setSnackbar(true);\n      setResponse(res.data.message);\n      setSnackType(res.data.type);\n    });\n  };\n\n  return (\n    <div>\n      <PopUp\n        title=\"Personal Details\"\n        openPopup={detailPopUp}\n        setOpenPopup={setDetailPopUp}\n      >\n        {userData &&\n          userData.length > 0 &&\n          userData.map((item) => (\n            <Box width=\"21rem\" key={item.User_ID}>\n              <Formik\n                initialValues={{\n                  Username: item.User_Name,\n                  phone: item.phone,\n                }}\n                validationSchema={validationSchema}\n                onSubmit={submitHandler}\n              >\n                {({ touched, errors, handleChange, values, setFieldValue }) => (\n                  <Form>\n                    <Grid container component=\"span\" spacing={2}>\n                      <Grid item xs={3}>\n                        <Typography\n                          style={{ marginTop: \"0.5rem\" }}\n                          variant=\"body2\"\n                        >\n                          Username\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={8}>\n                        <CustomTextField\n                          variant=\"standard\"\n                          value={values.User_Name}\n                          name=\"Username\"\n                          type=\"text\"\n                          error={errors.User_Name && touched.User_Name}\n                          onChange={handleChange}\n                          errortext={errors.User_Name}\n                        />\n                      </Grid>\n\n                      <Grid item xs={3}>\n                        <Typography\n                          style={{ marginTop: \"0.5rem\" }}\n                          variant=\"body2\"\n                        >\n                          Email\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={8}>\n                        <Typography\n                          style={{ marginTop: \"0.5rem\" }}\n                          variant=\"body2\"\n                        >\n                          {item.Email}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Typography\n                          style={{ marginTop: \"0.5rem\" }}\n                          variant=\"standard\"\n                        >\n                          Phone\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={8}>\n                        <CustomTextField\n                          variant=\"standard\"\n                          value={values.phone}\n                          name=\"phone\"\n                          type=\"text\"\n                          error={errors.phone && touched.phone}\n                          onChange={handleChange}\n                          errortext={errors.phone}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box style={{ marginTop: \"1.2rem\" }}>\n                      <Button\n                        type=\"submit\"\n                        onClick={() => setUserId(item.User_ID)}\n                      >\n                        Save\n                      </Button>\n                      <Button onClick={() => setDetailPopUp(false)}>\n                        Cancel\n                      </Button>\n                    </Box>\n                  </Form>\n                )}\n              </Formik>\n            </Box>\n          ))}\n      </PopUp>\n    </div>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\Admin.js",["304","305"],"import React, { useEffect } from \"react\";\nimport AdminDashboard from \"./AdminDashboard\";\nimport {\n  Grid,\n  Container,\n  makeStyles,\n  Paper,\n  Box,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAppointment } from \"../../actions/booking-actions\";\nimport CountUp from \"react-countup\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    height: \"14rem\",\n    width: \"18rem\",\n  },\n  box: {\n    height: \"14rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nexport default function Admin() {\n  const appointments = useSelector((state) => state.booking.appointments);\n  const staffs = useSelector((state) => state.booking.staffs);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAppointment());\n  }, []);\n\n  const classes = useStyles();\n  const GridContainer = (props) => {\n    const { number, title } = props;\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Paper className={classes.paper}>\n          <Typography\n            align=\"center\"\n            style={{ paddingTop: \"1rem\", marginBottom: \"-2rem\" }}\n          >\n            {title}\n          </Typography>\n          <Box className={classes.box}>\n            <Typography variant=\"h1\">\n              <CountUp end={number} duration={3} />\n            </Typography>\n          </Box>\n        </Paper>\n      </Grid>\n    );\n  };\n  return (\n    <AdminDashboard>\n      <Container maxWidth=\"md\">\n        <Grid container spacing={4}>\n          <GridContainer\n            number={appointments.length}\n            title=\"Appointment Count\"\n          />\n\n          <GridContainer\n            number={appointments.length}\n            title=\"Total Appointment\"\n          />\n        </Grid>\n      </Container>\n    </AdminDashboard>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\AdminDashboard.js",["306","307","308","309","310","311","312"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { AiFillShop, AiOutlineHome } from \"react-icons/ai\";\nimport { SiProducthunt, SiGooglecalendar } from \"react-icons/si\";\nimport { BsBag } from \"react-icons/bs\";\nimport { AiFillQuestionCircle } from 'react-icons/ai';\nimport {\n  RiScissors2Fill,\n  RiMapPinUserLine,\n  RiCalendarCheckLine,\n} from \"react-icons/ri\";\nimport { FaUserCircle, FaShoppingBag } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: \"teal\",\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function AdminDashboard({ children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const ListItemWithLink = (props) => {\n    const { title, children, path } = props;\n    return (\n      <Link to={path} style={{ textDecoration: \"none\", color: \"inherit\" }}>\n        <ListItem button>\n          <ListItemIcon style={{ marginLeft: \"0.5rem\" }}>\n            {children}\n          </ListItemIcon>\n          <ListItemText primary={title} />\n        </ListItem>\n      </Link>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Admin Panel\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronRightIcon />\n            ) : (\n              <ChevronLeftIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <ListItemWithLink path=\"/admin\" title=\"Dashboard\">\n            <AiOutlineHome size={20} />\n          </ListItemWithLink>\n\n          <ListItemWithLink path=\"/admin/userRole\" title=\"User Role\">\n            <RiMapPinUserLine size={20} />\n          </ListItemWithLink>\n        </List>\n\n        <Divider />\n        <List style={{ display: \"flex\", flexDirection: \"column\" }}>\n          \n          <ListItemWithLink path=\"/admin/service\" title=\"Services\">\n            <BsBag size={20} />\n          </ListItemWithLink>\n        </List>\n        <Divider />\n        <List style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <ListItemWithLink path=\"/admin/booking\" title=\"Booking\">\n            <RiCalendarCheckLine size={20} />\n          </ListItemWithLink>\n          <ListItemWithLink path=\"/admin/review\" title=\"Review\">\n            <AiFillQuestionCircle size={20} />\n          </ListItemWithLink>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {children}\n      </main>\n    </div>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\booking-actions.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\actions\\booking-types.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\reducers\\booking-reducers.js",["313"],"import {\r\n  BOOK_APPOINTMENT,\r\n  DELETE_APPOINTMENT,\r\n  LOAD_CURRENT_SERVICE,\r\n  FETCH_SERVICES,\r\n  DELETE_SERVICE,\r\n  UPDATE_SERVICE,\r\n  ADD_SERVICE,\r\n  FETCH_STAFFS,\r\n  DEMOTE_STAFFS,\r\n  FETCH_ADMIN,\r\n  DEMOTE_ADMIN,\r\n  FETCH_APPOINTMENT,\r\n  FETCH_USER_APPOINTMENTS,\r\n  TOTAL_PRICE,\r\n  VEHICLE_TYPE,\r\n  HANDLE_PAYMENT,\r\n  CART,\r\n} from \"../actions/booking-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  services: [],\r\n  cart: [],\r\n  currentItem: null,\r\n  staffs: [],\r\n  admins: [],\r\n  appointments: [],\r\n  bookingCart: [],\r\n  totalPrice: null,\r\n  vehicle: null,\r\n  cart: [],\r\n};\r\n\r\nconst bookingReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SERVICES:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        services: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_STAFFS:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        staffs: action.payload,\r\n      };\r\n    case DEMOTE_STAFFS:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        // staffs: action.payload,\r\n      };\r\n\r\n    case FETCH_ADMIN:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        //admins: action.payload,\r\n      };\r\n    case DEMOTE_ADMIN:\r\n      // console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        admins: [],\r\n      };\r\n    case BOOK_APPOINTMENT:\r\n      const inBookingCart = state.bookingCart?.find((item) =>\r\n        item.services_id === action.payload.serviceId ? true : false\r\n      );\r\n      return {\r\n        ...state,\r\n        bookingCart: !inBookingCart && [...state.bookingCart, action.payload],\r\n      };\r\n    //Get the items data from the services array\r\n    // const item = state.services.find(\r\n    //   (item) => item.service_id === action.payload.id\r\n    // );\r\n    // //Check if item is in the cart already\r\n    // const inCart = state.cart.find((item) =>\r\n    //   item.service_id === action.payload.id ? true : false\r\n    // );\r\n    // return {\r\n    //   ...state,\r\n    //   cart: inCart\r\n    //     ? state.cart.map((item) =>\r\n    //         item.service_id === action.payload.id\r\n    //           ? {\r\n    //               ...item,\r\n    //               qty: item.qty + action.payload.qty,\r\n    //               total: action.payload.qty * item.price,\r\n    //             }\r\n    //           : item\r\n    //       )\r\n    //     : [\r\n    //         ...state.cart,\r\n    //         {\r\n    //           ...item,\r\n    //           qty: action.payload.qty,\r\n    //           total: item.qty * item.price,\r\n    //         },\r\n    //       ],\r\n\r\n    // };\r\n    case DELETE_APPOINTMENT:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(\r\n          (item) => item.services_id !== action.payload.id\r\n        ),\r\n      };\r\n\r\n    case LOAD_CURRENT_SERVICE:\r\n      return {\r\n        ...state,\r\n        currentItem: action.payload,\r\n      };\r\n\r\n    case DELETE_SERVICE:\r\n      return {\r\n        ...state,\r\n        services: state.services.filter(\r\n          (item) => item.services_id !== action.payload.id\r\n        ),\r\n      };\r\n\r\n    case UPDATE_SERVICE:\r\n      return {\r\n        ...state,\r\n        services: action.payload.data,\r\n        // (action.payload.id !== null) & (action.payload.image !== null) &&\r\n        // state.services.map(\r\n        //   (item) =>\r\n        //     item.service_id === action.payload.id && {\r\n        //       ...item,\r\n        //       image: action.payload.image,\r\n        //     }\r\n        // ),\r\n      };\r\n    case ADD_SERVICE:\r\n      return {\r\n        ...state,\r\n        services: action.payload,\r\n      };\r\n    case FETCH_APPOINTMENT:\r\n      return {\r\n        ...state,\r\n        appointments: action.payload,\r\n      };\r\n\r\n    case FETCH_USER_APPOINTMENTS:\r\n      return {\r\n        ...state,\r\n        bookingCart: action.payload,\r\n      };\r\n    case TOTAL_PRICE:\r\n      return {\r\n        ...state,\r\n        totalPrice: action.payload,\r\n      };\r\n    case VEHICLE_TYPE:\r\n      return {\r\n        ...state,\r\n        vehicle: action.payload,\r\n      };\r\n    case HANDLE_PAYMENT:\r\n      // let appointment = state.appointments.find((item) =>\r\n      //   item.user_id === action.payload.id ? true : false\r\n      // );\r\n      return {\r\n        ...state,\r\n        appointments: action.payload,\r\n      };\r\n    case CART:\r\n      return {\r\n        ...state,\r\n        cart: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookingReducer;\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\UserRoles.js",["314","315","316","317","318","319","320"],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\ProductsTable.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\ServicesTable.js",["321","322","323","324"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { forwardRef } from \"react\";\nimport AddItem from \"../common/AddItem\";\nimport useTableActions from \"../common/useTableActions\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nimport AdminDashboard from \"./AdminDashboard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchServices } from \"../../actions/booking-actions\";\nimport { BiSleepy } from \"react-icons/bi\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  DeleteIcon: forwardRef((props, ref) => (\n    <DeleteOutline {...props} ref={ref} />\n  )),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\nexport default function ProductsTable() {\n  //state for delete and edit popup for selected row\n  const [DeletePopUp, setDeletePopUp] = useState(false);\n  const [editPopUp, setEditPopUp] = useState(false);\n\n  //to send the item to edit or delete\n  const [actionItem, setActionItem] = useState({});\n\n  const loading = useSelector((state) => state.booking.loading);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const services = useSelector((state) => state.booking.services);\n  const dispatch = useDispatch();\n  //store array from database\n  const [records, setRecords] = useState(services);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      dispatch(fetchServices());\n      setIsLoading(false);\n    }, 1500);\n  }, [records]);\n  const { DeleteItem, EditItem } = useTableActions();\n  return (\n    <AdminDashboard>\n      <AddItem\n        title=\"Add Service\"\n        postRoute=\"addServices\"\n        setRecords={setRecords}\n        setIsLoading={setIsLoading}\n      />\n      <MaterialTable\n        title=\"Service Table\"\n        icons={tableIcons}\n        isLoading={isLoading}\n        columns={[\n          {\n            field: \"tableData.id + 1\",\n            title: \"Id\",\n            render: (rowData) => {\n              return <p>{rowData.tableData.id + 1}</p>;\n            },\n          },\n          { field: \"services_name\", title: \" Service Name\" },\n          { field: \"services_price\", title: \"Price\" },\n          {\n            field: \"image\",\n            title: \"Image\",\n            sorting: false,\n            render: (rowData) => (\n              <img\n                src={require(`../../images/services/${rowData.image}`).default}\n                style={{ width: 90, height: 60, borderRadius: \"0.3rem\" }}\n                alt=\"product\"\n              />\n            ),\n          },\n          { field: \"services_description\", title: \"Description\", sorting: false },\n        ]}\n        data={records}\n        actions={[\n          {\n            icon: Edit,\n            tooltip: \"Edit Service\",\n            onClick: (event, rowData) => {\n              setActionItem(rowData);\n              setEditPopUp(true);\n            },\n          },\n          {\n            icon: DeleteOutline,\n            tooltip: \"Delete Service\",\n            onClick: (event, rowData) => {\n              setActionItem(rowData);\n              setDeletePopUp(true);\n            },\n          },\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n      />\n      <EditItem\n        editPopUp={editPopUp}\n        setEditPopUp={setEditPopUp}\n        item={actionItem}\n        imagePath=\"services\"\n        route=\"updateService\"\n        setRecords={setRecords}\n        setIsLoading={setIsLoading}\n      />\n      <DeleteItem\n        DeletePopUp={DeletePopUp}\n        setDeletePopUp={setDeletePopUp}\n        item={actionItem}\n        route={\"deleteService\"}\n        setRecords={setRecords}\n        setIsLoading={setIsLoading}\n      />\n    </AdminDashboard>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\AddItem.js",["325","326","327","328","329"],"import React, { useEffect, useState } from \"react\";\nimport { Container, Button, Box, Grid } from \"@material-ui/core\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport ImageUploader from \"./ImageUploader\";\n\nimport PopUp from \"./PopUp\";\nimport axios from \"axios\";\nimport useCustomForm from \"./useCustomForm\";\nimport { addService, fetchServices } from \"../../actions/booking-actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nexport default function AddItem(props) {\n  const { postRoute, title, setRecords, setIsLoading } = props;\n  const { CustomTextField } = useCustomForm();\n  const dispatch = useDispatch();\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const services = useSelector((state) => state.booking.services);\n\n\n  const Schema = Yup.object().shape({\n    name: Yup.string().required(\"Name is required!\"),\n    description: Yup.string().required(\"Description is required!\"),\n    price: Yup.number().required(\"Price is required\"),\n  });\n\n  const initialValues = {\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    image: null,\n  };\n\n  const onSubmit = (values) => {\n    setOpenPopup(false);\n    //to send image file and values to the backend\n    let data = new FormData();\n    console.log(values.image);\n    data.append(\"services_name\", values.name);\n    data.append(\"services_description\", values.description);\n    data.append(\"services_price\", values.price);\n    data.append(\"image\", values.image);\n\n    setIsLoading(true);\n    axios.post(`/${postRoute}`, data).then((res) => {\n      if (postRoute === \"addServices\") {\n        // dispatch(addService());\n        setTimeout(() => {\n          axios.get(\"/addServices\").then((res) => setRecords(res.data.result));\n          // dispatch(fetchServices());\n          setIsLoading(false);\n        }, 2000);\n      } else {\n        setTimeout(() => {\n          axios.get(\"/addProducts\").then((res) => setRecords(res.data.result));\n          // dispatch(fetchProducts());\n          setIsLoading(false);\n        }, 2000);\n      }\n    });\n  };\n  return (\n    <Container>\n      <Button\n        onClick={() => setOpenPopup(true)}\n        style={{\n          backgroundColor: \"teal\",\n          marginBottom: \"1rem\",\n          width: \"13rem\",\n        }}\n      >\n        {title}\n      </Button>\n      <PopUp title={title} openPopup={openPopup} setOpenPopup={setOpenPopup}>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={Schema}\n          onSubmit={onSubmit}\n        >\n          {({ errors, handleChange, touched, setFieldValue }) => (\n            <Form>\n              <Grid container spacing={2} component=\"div\">\n                <Grid item xs={12} md={6}>\n                  <ImageUploader setFieldValue={setFieldValue} />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Grid\n                    container\n                    component=\"div\"\n                    spacing={2}\n                    style={{ padding: \"1rem\" }}\n                  >\n                    <Grid item xs={12}>\n                      <CustomTextField\n                        label=\"Name\"\n                        name=\"name\"\n                        type=\"text\"\n                        error={errors.name && touched.name}\n                        onChange={handleChange}\n                        errortext={errors.name}\n                      />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                      <CustomTextField\n                        label=\"Price\"\n                        name=\"price\"\n                        type=\"number\"\n                        error={errors.price && touched.price}\n                        onChange={handleChange}\n                        errortext={errors.price}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <CustomTextField\n                        label=\"Description\"\n                        name=\"description\"\n                        id=\"description\"\n                        multiline\n                        rows={5}\n                        error={errors.description && touched.description}\n                        onChange={handleChange}\n                        errortext={errors.description}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Box style={{ float: \"right\" }}>\n                    <Button onClick={() => setOpenPopup(false)}>Cancel</Button>\n                    <Button type=\"submit\">Add</Button>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </PopUp>\n    </Container>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\useTableActions.js",["330","331","332","333"],"import { Box, Grid, Typography, Button } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport PopUp from \"./PopUp\";\n\nimport { Form, Formik } from \"formik\";\nimport useCustomForm from \"./useCustomForm\";\nimport ImageUploader from \"./ImageUploader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteService,\n  fetchServices,\n  updateService,\n} from \"../../actions/booking-actions\";\n\nimport axios from \"axios\";\n\nexport default function useTableActions() {\n  const { CustomTextField } = useCustomForm();\n  const dispatch = useDispatch();\n  const updatedService = useSelector((state) => state.booking.services);\n//   const updatedProduct = useSelector((state) => state.store.products);\n\n  const EditItem = (props) => {\n    const {\n      editPopUp,\n      setEditPopUp,\n      item,\n      imagePath,\n      route,\n      setRecords,\n      setIsLoading,\n    } = props;\n\n    const onSubmit = (values) => {\n      setIsLoading(true);\n      // console.log(values.image);\n      console.log(values.image);\n      let image_value = values.image === null ? \"old\" : values.image;\n      let data = new FormData();\n      data.append(\"services_name\", values.name);\n      data.append(\"services_price\", values.price);\n      data.append(\"services_description\", values.description);\n      data.append(\"services_id\", item.services_id);\n      data.append(\"image\", image_value);\n\n      setEditPopUp(false);\n\n      if (route === \"updateService\") {\n        // setRecords(updatedService);\n        axios.post(\"/updateService\", data);\n        // .then((res) => dispatch(updateService()));\n        // dispatch(fetchServices());\n        axios.get(\"/addServices\").then((res) => {\n          setRecords(res.data.result);\n        });\n        setTimeout(() => {\n          setIsLoading(false);\n          //  setRecords(updatedService);\n        }, 1500);\n      } \n    };\n    return (\n      <PopUp\n        title=\"Edit Data\"\n        openPopup={editPopUp}\n        setOpenPopup={setEditPopUp}\n      >\n        <Box width=\"26rem\">\n          <Formik\n            initialValues={{\n              name: item.services_name,\n              price: item.services_price,\n              description: item.services_description,\n              image: null,\n            }}\n            onSubmit={onSubmit}\n          >\n            {({ errors, handleChange, values, setFieldValue }) => (\n              <Form>\n                <Grid container spacing={1} component=\"span\">\n                  <Grid item xs={4}>\n                    <Typography>Name</Typography>\n                  </Grid>\n                  <Grid item xs={8}>\n                    <CustomTextField\n                      name=\"name\"\n                      variant=\"standard\"\n                      value={values.name}\n                      type=\"text\"\n                      onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography>Price</Typography>\n                  </Grid>\n                  <Grid item xs={8}>\n                    <CustomTextField\n                      name=\"price\"\n                      variant=\"standard\"\n                      value={values.price}\n                      type=\"number\"\n                      onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography>Description</Typography>\n                  </Grid>\n                  <Grid item xs={8}>\n                    <CustomTextField\n                      name=\"description\"\n                      variant=\"standard\"\n                      multiline\n                      value={values.description}\n                      type=\"text\"\n                      onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <ImageUploader\n                      prevImageValue={`${imagePath}/${item.image}`}\n                      setFieldValue={setFieldValue}\n                    />\n                  </Grid>\n\n                  <Box display=\"flex\">\n                    <Button type=\"submit\">Save</Button>\n                    <Button onClick={() => setEditPopUp(false)}>Cancel</Button>\n                  </Box>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </PopUp>\n    );\n  };\n\n  const DeleteItem = (props) => {\n    const {\n      DeletePopUp,\n      setDeletePopUp,\n      item,\n      route,\n      setRecords,\n      setIsLoading,\n    } = props;\n\n    //to delete selected row\n    const DeleteData = (item) => {\n      setDeletePopUp(false);\n      setIsLoading(true);\n      if (route === \"deleteService\") {\n        dispatch(deleteService(item));\n        axios.get(\"/addServices\").then((res) => setRecords(res.data.result));\n        setTimeout(() => {\n          setIsLoading(false);\n          //  setRecords(updatedService);\n        }, 1500);\n        // dispatch(fetchServices());\n      } \n    };\n\n    return (\n      <PopUp\n        title=\"Alert\"\n        openPopup={DeletePopUp}\n        setOpenPopup={setDeletePopUp}\n      >\n        <Box width=\"20rem\">\n          <Typography>\n            Deleting an item will remove all the records from our database.\n          </Typography>\n\n          <Box style={{ marginTop: \"1rem\" }}>\n            <Button>\n              <Typography color=\"error\" onClick={() => DeleteData(item)}>\n                Proceed\n              </Typography>\n            </Button>\n            <Button>\n              <Typography onClick={() => setDeletePopUp(false)}>\n                Abort\n              </Typography>\n            </Button>\n          </Box>\n        </Box>\n      </PopUp>\n    );\n  };\n\n  return { DeleteItem, EditItem };\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\ImageUploader.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Booking\\BookService.js",["334","335","336","337"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  Container,\n  Grid,\n  Paper,\n  Box,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/inventory.scss\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchAppointment,\n  fetchServices,\n  fetchStaffs,\n  fetchUserAppointment,\n  loadCurrentService,\n} from \"../../actions/booking-actions\";\n\nfunction BookService() {\n  const dispatch = useDispatch();\n  const vehicle = useSelector((state) => state.booking.vehicle);\n  console.log(vehicle);\n  const userData = useSelector((state) => state.login.userData);\n  useEffect(() => {\n    let id;\n    userData !== undefined && userData.map((item) => (id = item.User_ID));\n    console.log(id);\n    dispatch(fetchUserAppointment(id));\n    dispatch(fetchServices());\n\n    dispatch(fetchAppointment());\n  }, []);\n\n  const services = useSelector((state) => state.booking.services);\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" style={{ marginTop: \"10rem\" }}>\n        <Box>\n          <Grid container spacing={2}>\n            {services.map((item) => (\n              <Grid key={item.services_id} item xs={12} sm={6} md={3}>\n                <Paper className=\"product-container\">\n                  <Box className=\"image-container\">\n                    <img\n                      src={\n                        require(`../../images/services/${item.image}`).default\n                      }\n                      alt=\"product-img\"\n                      height=\"100%\"\n                      width=\"100%\"\n                      className=\"image\"\n                    />\n                  </Box>\n                  <Box textAlign=\"center\" marginTop=\"0.3rem\">\n                    <Typography align=\"center\" variant=\"body1\">\n                      {item.services_name}\n                    </Typography>\n                    <Typography align=\"center\" variant=\"body1\">\n                      Rs. {item.services_price}\n                    </Typography>\n\n                    <Link\n                      to={`/hamro/${vehicle}/booking/${item.services_id}`}\n                      style={{ textDecoration: \"none\", color: \"inherit\" }}\n                      onClick={() => dispatch(loadCurrentService(item))}\n                    >\n                      <Button\n                        style={{\n                          marginBottom: \"0.6rem\",\n                          backgroundColor: \"teal\",\n                          marginTop: \"0.3rem\",\n                          width: \"9rem\",\n                        }}\n                      >\n                        <Typography variant=\"caption\">BOOK NOW</Typography>\n                      </Button>\n                    </Link>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </>\n  );\n}\n\nexport default BookService;\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Booking\\BookingCart.js",["338","339","340"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Toolbar,\n  Typography,\n  Grid,\n  Paper,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { totalPrice as bill, cart } from \"../../actions/booking-actions\";\n\nexport default function BookingCart() {\n  const [bookingCart, setBookingCart] = useState([]);\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.login.userData);\n  const [userId] = userData.map((item) => item.User_ID);\n\n  useEffect(() => {\n    axios.get(\"/getAppointment\").then((res) => {\n      const value = res.data.result.filter((item) => item.User_ID === userId);\n      setBookingCart(value);\n    });\n  }, []);\n\n  let totalPrice;\n  let withVAT;\n  if (bookingCart?.length > 0) {\n    let array = bookingCart.map((item) => item.servicesPrice);\n    totalPrice = array.reduce((a, b) => a + b);\n    withVAT = totalPrice + Math.round(totalPrice * (13 / 100));\n  }\n  return (\n    <Container maxWidth=\"md\">\n      <div style={{ marginTop: \"10rem\" }}>\n        {bookingCart !== undefined && bookingCart.length > 0 ? (\n          bookingCart.map((item) => (\n            <Grid key={item.services_id} item xs={12} sm={8}>\n              <Paper>\n                <Grid container spacing={2} style={{ padding: \"1rem\" }}>\n                  <Grid item xs={5}>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      paddingLeft=\"0.5rem\"\n                      height=\"70px\"\n                      overflow=\"hidden\"\n                    >\n                      <img\n                        src={\n                          require(`../../images/services/${item.image}`).default\n                        }\n                        alt=\"product\"\n                        width=\"100%\"\n                        height=\"100%\"\n                      />\n                    </Box>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography variant=\"body1\">{item.servicesName}</Typography>\n                    <Typography variant=\"body2\">\n                      Rs. {item.servicesPrice}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      Vehicle Name: {item.vehicle_name}\n                    </Typography>\n                    <Typography variant=\"body2\"> Time: {item.time}</Typography>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Typography variant=\"body2\">\n                      Total = {item.services_price}\n                    </Typography>\n                    <Typography\n                      type=\"button\"\n                      color=\"error\"\n                      variant=\"body2\"\n                      onClick={() => {\n                        axios.post(\"/deleteCart\", {\n                          id: item.appointment_id,\n                        });\n                      }}\n                    >\n                      Remove\n                      <AiFillDelete\n                        style={{ marginLeft: \"0.4rem\" }}\n                        size={15}\n                      />\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          ))\n        ) : (\n          <Grid item xs={12}>\n            <Paper>\n              <Box padding=\"0.5rem\" textAlign=\"center\">\n                <Typography variant=\"body2\" style={{ color: \"lightGrey\" }}>\n                  No items in the cart.{\" \"}\n                  <Link\n                    // lassName={classes.link}\n                    to=\"/\"\n                  >\n                    VISIT HOME\n                  </Link>\n                </Typography>\n              </Box>\n            </Paper>\n          </Grid>\n        )}\n        {bookingCart !== undefined && bookingCart.length > 0 && (\n          <Grid item xs={12} sm={4}>\n            <Paper>\n              <Box padding=\"1.2rem\" marginTop=\"1.5rem\">\n                <Grid container spacing={1}>\n                  <Grid item xs={8}>\n                    <Typography variant=\"body2\">Price : </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography variant=\"body2\">{totalPrice}</Typography>\n                  </Grid>\n                  <Grid item xs={8}>\n                    <Typography align=\"left\" variant=\"body2\">\n                      VAT\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    {\" \"}\n                    <Typography align=\"left\" variant=\"body2\">\n                      13%\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={8}>\n                    <Typography variant=\"body2\">Total Amount: </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Typography variant=\"body2\"> {withVAT}</Typography>\n                  </Grid>\n                </Grid>\n                <Box\n                  marginTop=\"0.5rem\"\n                  marginBottom=\"-0.4rem\"\n                  textAlign=\"center\"\n                >\n                  <Link\n                    // className={classes.link}\n                    to=\"/hamro/payment\"\n                  >\n                    <Button\n                      style={{ backgroundColor: \"teal\" }}\n                      onClick={() => {\n                        dispatch(bill(withVAT));\n                        console.log(bookingCart);\n                        dispatch(cart(bookingCart));\n                      }}\n                    >\n                      Checkout\n                    </Button>\n                  </Link>\n                </Box>\n              </Box>\n            </Paper>\n          </Grid>\n        )}\n      </div>\n    </Container>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Booking\\OrderPage.js",["341","342","343","344","345","346","347","348","349"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  Box,\n  Typography,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { SiCashapp } from \"react-icons/si\";\n\nimport \"../scss/orderpage.scss\";\nimport useCustomForm from \"../common/useCustomForm\";\nimport CustomSnackbar from \"../common/CustomSnackbar\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchStaffs } from \"../../actions/booking-actions\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nfunction OrderPage() {\n  const { DropdownSelect, CustomDatePicker, CustomTextField } = useCustomForm();\n\n  const vehicle = useSelector((state) => state.booking.vehicle);\n  const item = useSelector((state) => state.booking.currentItem);\n  const userData = useSelector((state) => state.login.userData);\n\n  const [choosenTime, setChoosenTime] = useState(null);\n  const [vehicleNumber, setVehicleNumber] = useState(\"\");\n  const [choosenSpecialist, setChoosenSpecialist] = useState(null);\n\n  const [choosenVehicle, setChoosenVehicle] = useState(null);\n\n  const appointments = useSelector((state) => state.booking.appointments);\n\n  const [response, setResponse] = useState();\n  const [snackbar, setSnackbar] = useState(false);\n  const [snackType, setSnackType] = useState();\n\n  const dispatch = useDispatch();\n\n  const staffs = useSelector((state) => state.booking.staffs);\n  const specialist = staffs.map((item) => ({\n    value: item.User_Name,\n    id: item.user_id,\n  }));\n\n  //to get tommorows date\n  const todayMoment = moment();\n  const tommorowMoment = todayMoment.clone().add(1, \"days\");\n  const tommorowDate = moment.utc(tommorowMoment._d).format(\"YYYY-MM-DD\");\n\n  const [appointmentDate, setappointmentDate] = useState(tommorowDate);\n\n  const TimeAvailable = [\n    { value: \"9:00-10:00\", id: \"9-10\" },\n    { value: \"10:00-11:00\", id: \"10-11\" },\n    { value: \"11:00-12:00\", id: \"11-12\" },\n    { value: \"2:00-3:00\", id: \"2-3\" },\n    { value: \"3:00-4:00\", id: \"3-4\" },\n    { value: \"4:00-5:00\", id: \"4-5\" },\n  ];\n\n  const Bike = [\n    { value: \"bike\", id: \"9-10\" },\n    { value: \"10:00-11:00\", id: \"10-11\" },\n    { value: \"11:00-12:00\", id: \"11-12\" },\n    { value: \"2:00-3:00\", id: \"2-3\" },\n    { value: \"3:00-4:00\", id: \"3-4\" },\n    { value: \"4:00-5:00\", id: \"4-5\" },\n  ];\n\n  const Car = [\n    { value: \"car\", id: \"9-10\" },\n    { value: \"10:00-11:00\", id: \"10-11\" },\n    { value: \"11:00-12:00\", id: \"11-12\" },\n    { value: \"2:00-3:00\", id: \"2-3\" },\n    { value: \"3:00-4:00\", id: \"3-4\" },\n    { value: \"4:00-5:00\", id: \"4-5\" },\n  ];\n  let history = useHistory();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let userId;\n    let timeId;\n    console.log(vehicleNumber);\n    // TimeAvailable.map((item) => (timeId = item.id));\n\n    if (userData.length > 0) {\n      if (vehicleNumber !== null && choosenTime !== null) {\n        userData.map((user) => (userId = user.User_ID));\n        console.log(userId);\n        axios\n          .post(\"/bookAppointment\", {\n            serviceId: item.services_id,\n            userId: userId,\n            time: choosenTime,\n            date: appointmentDate,\n            vehicle: vehicle,\n            vehicleName: choosenVehicle,\n            vehicleNumber: vehicleNumber,\n          })\n          .then((res) => {\n            setSnackbar(true);\n            setResponse(res.data.message);\n            setSnackType(res.data.type);\n            if (res.data.type === \"success\") {\n              setTimeout(() => {\n                history.goBack();\n              }, 2000);\n            }\n          });\n        // dispatch(\n        //   bookAppointment(item.service_id, userId, time, choosenSpecialist)\n        // );\n      } else {\n        setSnackbar(true);\n        setResponse(\"Please provide all the Details\");\n        setSnackType(\"error\");\n      }\n    } else {\n      history.push(\"/hamro/login\");\n    }\n  };\n\n  return (\n    <>\n      {response && response.length > 0 && (\n        <CustomSnackbar\n          snackbarOpen={snackbar}\n          setSnackbar={setSnackbar}\n          snackType={snackType}\n          snackContent={response}\n        />\n      )}\n      <Container style={{ paddingTop: \"8rem\" }}>\n        <Grid container spacing={4}>\n          <Grid item sm={12} md={6} style={{ marginTop: \"3rem\" }}>\n            <Box\n              style={{\n                borderRadius: \"0.7rem\",\n                overflow: \"hidden\",\n              }}\n            >\n              <img\n                src={require(`../../images/services/${item.image}`).default}\n                alt=\"container\"\n                className=\"itemImage\"\n              />\n            </Box>\n            <Box className=\"image-subText\">\n              <Typography>\n                <FaCheckCircle className=\"icons\" />\n                100% Customer Satisfaction\n              </Typography>\n              <Typography>\n                <FaCheckCircle className=\"icons\" />\n                Cancel Appointment Anytime\n              </Typography>\n              <Typography>\n                <SiCashapp className=\"icons\" />\n                Payment method of your choice\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item sm={12} md={6}>\n            <Box>\n              <Typography\n                variant=\"h4\"\n                style={{ fontWeight: \"bold\", marginBottom: \"1rem\" }}\n              >\n                {item.services_name}\n              </Typography>\n\n              <Box className=\"product-info\">\n                <Box className=\"price\">Rs. {item.services_price}</Box>\n                <Typography variant=\"caption\" className=\"price-subText\">\n                  Exclusive of taxes\n                </Typography>\n              </Box>\n              <Box className=\"description\">\n                <Typography>{item.services_description}</Typography>\n              </Box>\n\n              {vehicle === \"bike\" ? (\n                <DropdownSelect\n                  title=\"Choose Vehicle\"\n                  name=\"bike\"\n                  id=\"bike\"\n                  value={choosenVehicle}\n                  array={Bike}\n                  onChange={(e) => {\n                    setChoosenVehicle(e.target.value);\n                    console.log(e.target.value);\n                  }}\n                />\n              ) : (\n                <DropdownSelect\n                  title=\"Choose Vehicle\"\n                  name=\"car\"\n                  id=\"car\"\n                  value={choosenVehicle}\n                  array={Car}\n                  onChange={(e) => {\n                    setChoosenVehicle(e.target.value);\n                    console.log(e.target.value);\n                  }}\n                />\n              )}\n\n              <Box marginBottom=\"1rem\">\n                <Typography htmlFor=\"date-picker\" variant=\"caption\">\n                  Choose Date\n                </Typography>\n\n                <br />\n                <CustomDatePicker\n                  name=\"date\"\n                  id=\"date-picker\"\n                  disablePast\n                  style={{ width: \"18rem\" }}\n                  value={appointmentDate}\n                  onChange={(value) => setappointmentDate(value)}\n                />\n              </Box>\n              {TimeAvailable && (\n                <DropdownSelect\n                  title=\"Time Available\"\n                  name=\"time\"\n                  id=\"time\"\n                  value={choosenTime}\n                  array={TimeAvailable}\n                  onChange={(e) => {\n                    setChoosenTime(e.target.value);\n                  }}\n                />\n              )}\n              <TextField\n                label=\"Vehicle Number\"\n                variant=\"standard\"\n                type=\"text\"\n                value={vehicleNumber}\n                style={{ width: \"18rem\" }}\n                onChange={(e) => {\n                  console.log(e.target.value);\n                  setVehicleNumber(e.target.value);\n                }}\n                placeholder=\"Ba 96 Pa 71\"\n              />\n              <Button\n                onClick={onSubmit}\n                style={{\n                  backgroundColor: \"teal\",\n                  color: \"white\",\n                  width: \"14rem\",\n                  padding: \"0.6rem\",\n                  borderRadius: \"0.7rem\",\n                  margin: \"0.5rem\",\n                  marginLeft: \"2rem\",\n                }}\n              >\n                Book Appointment\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default OrderPage;\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\common\\HoverCart.js",["350","351","352","353","354"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, Typography, Badge } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    marginTop: \"20rem\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  cart: {\r\n    paddingRight: \"0.1rem\",\r\n    cursor: \"pointer\",\r\n    backgroundColor: \"teal\",\r\n    position: \"fixed\",\r\n    height: \"8rem\",\r\n    width: \"1.5rem\",\r\n    borderBottomLeftRadius: \"0.6rem\",\r\n    borderTopLeftRadius: \"0.6rem\",\r\n    right: \"0\",\r\n    zIndex: \"9\",\r\n    float: \"right\",\r\n    writingMode: \"vertical-rl\",\r\n    \"&:hover\": {\r\n      width: \"2rem\",\r\n    },\r\n  },\r\n  link: {\r\n    color: \"inherit\",\r\n    \"&:hover\": {\r\n      color: \"inherit\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function HoverCart() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link to=\"/hamro/bookingCart\" className={classes.link}>\r\n      <div className={classes.box}>\r\n        <Typography\r\n          component=\"span\"\r\n          align=\"center\"\r\n          variant=\"subtitle\"\r\n          className={classes.cart}\r\n        >\r\n          Booking Cart\r\n        </Typography>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Payment\\Payment.js",["355","356","357","358","359","360"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport \"./payment.scss\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useKhaltiCheckout from \"./useKhaltiCheckout\";\r\nimport { handlePayment, fetchAppointment } from \"../actions/booking-actions\";\r\n\r\nexport default function Payment() {\r\n  const { checkout } = useKhaltiCheckout();\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state) => state.login.userData);\r\n  const userId = userData.map((item) => item.User_ID);\r\n  const cart = useSelector((state) => state.booking.cart);\r\n  // const cart = useSelector((state) => state.store.cart);\r\n  const bookingCart = useSelector((state) => state.booking.bookingCart);\r\n\r\n  const [response, setResponse] = useState();\r\n  const [snackbar, setSnackbar] = useState(false);\r\n  const [snackType, setSnackType] = useState();\r\n\r\n  const offline = \"Offline\";\r\n  const online = \"Online\";\r\n\r\n  let history = useHistory();\r\n  return (\r\n    <Container maxWidth=\"md\" style={{ marginTop: \"9rem\" }}>\r\n      <Typography align=\"center\" variant=\"h5\">\r\n        Choose your preferred payment method{\" \"}\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"3rem\" }}\r\n      >\r\n        <Grid item xs={6}>\r\n          <Link to=\"/\">\r\n            <Paper\r\n              className=\"paper\"\r\n              onClick={() => {\r\n                dispatch(handlePayment(userId, offline));\r\n                dispatch(fetchAppointment());\r\n                axios.post(\"/confirmation\", {\r\n                  email: userData.map((item) => item.email),\r\n                  //cart: cart,\r\n                  bookingCart: cart,\r\n                });\r\n                setSnackbar(true);\r\n                setSnackType(\"success\");\r\n                setResponse(\"Thankyou for choosing us\");\r\n                setTimeout(() => {\r\n                  // history.push(\"/#services\");\r\n                }, 2500);\r\n              }}\r\n            >\r\n              <img\r\n                src={require(\"../images/other/cash-in-hand.jpeg\").default}\r\n                alt=\"cash in hand\"\r\n                className=\"image-payment\"\r\n              />\r\n            </Paper>\r\n          </Link>\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Cash in Hand\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper\r\n            className=\"paper\"\r\n            onClick={() => {\r\n              checkout();\r\n              dispatch(handlePayment(userId, online));\r\n              setSnackbar(true);\r\n              setSnackType(\"success\");\r\n              setResponse(\"Thankyou for choosing us\");\r\n              dispatch(fetchAppointment());\r\n              axios.post(\"/confirmation\", {\r\n                email: userData.map((item) => item.email),\r\n                //cart: cart,\r\n                bookingCart: cart,\r\n              });\r\n              setTimeout(() => {\r\n                history.push(\"/#services\");\r\n              }, 9500);\r\n            }}\r\n          >\r\n            <img\r\n              src={require(\"../images/other/online-payment.jpeg\").default}\r\n              alt=\"online payment\"\r\n              className=\"image-payment\"\r\n            />\r\n          </Paper>\r\n\r\n          <Typography align=\"center\" variant=\"h6\" className=\"text\">\r\n            Online Payment\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\Payment\\useKhaltiCheckout.js",["361"],"import KhaltiCheckout from \"khalti-checkout-web\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function useKhaltiCheckout() {\r\n  const totalPrice = useSelector((state) => state.booking.totalPrice);\r\n\r\n  let config = {\r\n    publicKey: \"test_public_key_dc74e0fd57cb46cd93832aee0a507256\",\r\n    productIdentity: \"1234567890\",\r\n    productName: \"Drogon\",\r\n    productUrl: \"http://gameofthrones.com/buy/Dragons\",\r\n    eventHandler: {\r\n      onSuccess(payload) {\r\n        // hit merchant api for initiating verfication\r\n        console.log(payload);\r\n      },\r\n      // onError handler is optional\r\n      onError(error) {\r\n        // handle errors\r\n        console.log(error);\r\n      },\r\n    },\r\n    // one can set the order of payment options and also the payment options based on the order and items in the array\r\n    paymentPreference: [\"KHALTI\"],\r\n  };\r\n\r\n  const checkout = () => {\r\n    let response = new KhaltiCheckout(config);\r\n    response.show({ amount: totalPrice * 100 });\r\n  };\r\n\r\n  return { checkout };\r\n}\r\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\AppointmentTable.js",["362","363","364","365","366","367"],"import React, { useEffect, useState } from \"react\";\nimport MaterialTable from \"material-table\";\nimport axios from \"axios\";\nimport { forwardRef } from \"react\";\nimport AddItem from \"../common/AddItem\";\nimport useTableActions from \"../common/useTableActions\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport AdminDashboard from \"./AdminDashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchAppointment } from \"../../actions/booking-actions\";\nimport { moment } from \"moment\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  DeleteIcon: forwardRef((props, ref) => (\n    <DeleteOutline {...props} ref={ref} />\n  )),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nexport default function AppointmentTable() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const services = useSelector((state) => state.booking.appointments);\n  //store array from database\n  const [records, setRecords] = useState(services);\n  const dispatch = useDispatch();\n\n  console.log(services);\n  useEffect(() => {\n    setIsLoading(true);\n    dispatch(fetchAppointment());\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, [records]);\n  console.log(records);\n\n  return (\n    <AdminDashboard>\n      <MaterialTable\n        title=\"Appointment Table\"\n        icons={tableIcons}\n        isLoading={isLoading}\n        columns={[\n          {\n            field: \"tableData.id + 1\",\n            title: \"Id\",\n            render: (rowData) => {\n              return <p>{rowData.tableData.id + 1}</p>;\n            },\n          },\n          { field: \"servicesName\", title: \"Service Name\" },\n          { field: \"servicesPrice\", title: \"Price\" },\n\n          { field: \"date\", title: \"Date\" },\n          { field: \"time\", title: \"Time\" },\n          { field: \"client\", title: \"Client\" },\n        ]}\n        data={records}\n      />\n    </AdminDashboard>\n  );\n}\n","D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Chat.js",[],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\userTable.js",["368","369","370","371","372","373","374","375","376","377","378","379"],"D:\\react JS\\hamroworkshop\\hamro-workshop\\client\\src\\components\\Admin\\UserTable.js",["380","381","382","383","384","385","386"],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":5,"column":25,"nodeType":"393","messageId":"394","endLine":5,"endColumn":31},{"ruleId":"391","severity":1,"message":"395","line":5,"column":33,"nodeType":"393","messageId":"394","endLine":5,"endColumn":38},{"ruleId":"391","severity":1,"message":"396","line":5,"column":40,"nodeType":"393","messageId":"394","endLine":5,"endColumn":46},{"ruleId":"391","severity":1,"message":"397","line":10,"column":8,"nodeType":"393","messageId":"394","endLine":10,"endColumn":14},{"ruleId":"391","severity":1,"message":"398","line":15,"column":11,"nodeType":"393","messageId":"394","endLine":15,"endColumn":16},{"ruleId":"387","replacedBy":"399"},{"ruleId":"389","replacedBy":"400"},{"ruleId":"391","severity":1,"message":"401","line":5,"column":8,"nodeType":"393","messageId":"394","endLine":5,"endColumn":19},{"ruleId":"391","severity":1,"message":"402","line":8,"column":3,"nodeType":"393","messageId":"394","endLine":8,"endColumn":12},{"ruleId":"391","severity":1,"message":"403","line":10,"column":3,"nodeType":"393","messageId":"394","endLine":10,"endColumn":6},{"ruleId":"391","severity":1,"message":"404","line":12,"column":3,"nodeType":"393","messageId":"394","endLine":12,"endColumn":13},{"ruleId":"391","severity":1,"message":"405","line":9,"column":5,"nodeType":"393","messageId":"394","endLine":9,"endColumn":13},{"ruleId":"391","severity":1,"message":"406","line":83,"column":12,"nodeType":"393","messageId":"394","endLine":83,"endColumn":20},{"ruleId":"391","severity":1,"message":"407","line":84,"column":12,"nodeType":"393","messageId":"394","endLine":84,"endColumn":20},{"ruleId":"391","severity":1,"message":"408","line":85,"column":12,"nodeType":"393","messageId":"394","endLine":85,"endColumn":21},{"ruleId":"409","severity":1,"message":"410","line":105,"column":15,"nodeType":"411","endLine":116,"endColumn":6},{"ruleId":"409","severity":1,"message":"412","line":116,"column":8,"nodeType":"413","endLine":116,"endColumn":10,"suggestions":"414"},{"ruleId":"391","severity":1,"message":"415","line":14,"column":10,"nodeType":"393","messageId":"394","endLine":14,"endColumn":21},{"ruleId":"391","severity":1,"message":"396","line":24,"column":10,"nodeType":"393","messageId":"394","endLine":24,"endColumn":16},{"ruleId":"391","severity":1,"message":"395","line":24,"column":24,"nodeType":"393","messageId":"394","endLine":24,"endColumn":29},{"ruleId":"391","severity":1,"message":"416","line":82,"column":10,"nodeType":"393","messageId":"394","endLine":82,"endColumn":22},{"ruleId":"391","severity":1,"message":"417","line":82,"column":24,"nodeType":"393","messageId":"394","endLine":82,"endColumn":39},{"ruleId":"409","severity":1,"message":"410","line":86,"column":13,"nodeType":"411","endLine":94,"endColumn":4},{"ruleId":"409","severity":1,"message":"412","line":94,"column":6,"nodeType":"413","endLine":94,"endColumn":8,"suggestions":"418"},{"ruleId":"391","severity":1,"message":"419","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":12},{"ruleId":"391","severity":1,"message":"420","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":18},{"ruleId":"391","severity":1,"message":"421","line":4,"column":34,"nodeType":"393","messageId":"394","endLine":4,"endColumn":40},{"ruleId":"391","severity":1,"message":"422","line":10,"column":3,"nodeType":"393","messageId":"394","endLine":10,"endColumn":8},{"ruleId":"391","severity":1,"message":"423","line":18,"column":3,"nodeType":"393","messageId":"394","endLine":18,"endColumn":24},{"ruleId":"391","severity":1,"message":"424","line":31,"column":18,"nodeType":"393","messageId":"394","endLine":31,"endColumn":26},{"ruleId":"425","severity":1,"message":"426","line":105,"column":19,"nodeType":"427","endLine":108,"endColumn":21},{"ruleId":"391","severity":1,"message":"428","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":23},{"ruleId":"391","severity":1,"message":"429","line":18,"column":8,"nodeType":"393","messageId":"394","endLine":18,"endColumn":21},{"ruleId":"391","severity":1,"message":"415","line":2,"column":10,"nodeType":"393","messageId":"394","endLine":2,"endColumn":21},{"ruleId":"391","severity":1,"message":"430","line":6,"column":9,"nodeType":"393","messageId":"394","endLine":6,"endColumn":13},{"ruleId":"431","severity":1,"message":"432","line":8,"column":11,"nodeType":"433","messageId":"434","endLine":8,"endColumn":25,"fix":"435"},{"ruleId":"391","severity":1,"message":"436","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"437","line":12,"column":8,"nodeType":"393","messageId":"394","endLine":12,"endColumn":21},{"ruleId":"391","severity":1,"message":"438","line":17,"column":8,"nodeType":"393","messageId":"394","endLine":17,"endColumn":18},{"ruleId":"391","severity":1,"message":"415","line":24,"column":23,"nodeType":"393","messageId":"394","endLine":24,"endColumn":34},{"ruleId":"391","severity":1,"message":"439","line":37,"column":11,"nodeType":"393","messageId":"394","endLine":37,"endColumn":25},{"ruleId":"440","severity":1,"message":"441","line":181,"column":37,"nodeType":"442","messageId":"443","endLine":181,"endColumn":39},{"ruleId":"391","severity":1,"message":"444","line":9,"column":3,"nodeType":"393","messageId":"394","endLine":9,"endColumn":17},{"ruleId":"391","severity":1,"message":"445","line":19,"column":8,"nodeType":"393","messageId":"394","endLine":19,"endColumn":18},{"ruleId":"391","severity":1,"message":"446","line":20,"column":8,"nodeType":"393","messageId":"394","endLine":20,"endColumn":16},{"ruleId":"391","severity":1,"message":"447","line":21,"column":8,"nodeType":"393","messageId":"394","endLine":21,"endColumn":19},{"ruleId":"391","severity":1,"message":"448","line":23,"column":10,"nodeType":"393","messageId":"394","endLine":23,"endColumn":18},{"ruleId":"391","severity":1,"message":"449","line":24,"column":10,"nodeType":"393","messageId":"394","endLine":24,"endColumn":16},{"ruleId":"391","severity":1,"message":"450","line":25,"column":10,"nodeType":"393","messageId":"394","endLine":25,"endColumn":14},{"ruleId":"391","severity":1,"message":"451","line":26,"column":10,"nodeType":"393","messageId":"394","endLine":26,"endColumn":14},{"ruleId":"391","severity":1,"message":"436","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":26},{"ruleId":"391","severity":1,"message":"452","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":21},{"ruleId":"391","severity":1,"message":"453","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":13},{"ruleId":"391","severity":1,"message":"454","line":46,"column":9,"nodeType":"393","messageId":"394","endLine":46,"endColumn":17},{"ruleId":"391","severity":1,"message":"455","line":9,"column":8,"nodeType":"393","messageId":"394","endLine":9,"endColumn":14},{"ruleId":"391","severity":1,"message":"456","line":25,"column":28,"nodeType":"393","messageId":"394","endLine":25,"endColumn":44},{"ruleId":"391","severity":1,"message":"457","line":30,"column":9,"nodeType":"393","messageId":"394","endLine":30,"endColumn":15},{"ruleId":"409","severity":1,"message":"458","line":35,"column":6,"nodeType":"413","endLine":35,"endColumn":8,"suggestions":"459"},{"ruleId":"391","severity":1,"message":"460","line":19,"column":10,"nodeType":"393","messageId":"394","endLine":19,"endColumn":20},{"ruleId":"391","severity":1,"message":"461","line":20,"column":10,"nodeType":"393","messageId":"394","endLine":20,"endColumn":23},{"ruleId":"391","severity":1,"message":"462","line":20,"column":25,"nodeType":"393","messageId":"394","endLine":20,"endColumn":41},{"ruleId":"391","severity":1,"message":"463","line":24,"column":3,"nodeType":"393","messageId":"394","endLine":24,"endColumn":18},{"ruleId":"391","severity":1,"message":"464","line":28,"column":10,"nodeType":"393","messageId":"394","endLine":28,"endColumn":22},{"ruleId":"391","severity":1,"message":"465","line":28,"column":24,"nodeType":"393","messageId":"394","endLine":28,"endColumn":37},{"ruleId":"391","severity":1,"message":"466","line":30,"column":10,"nodeType":"393","messageId":"394","endLine":30,"endColumn":24},{"ruleId":"467","severity":1,"message":"468","line":31,"column":3,"nodeType":"469","messageId":"443","endLine":31,"endColumn":7},{"ruleId":"391","severity":1,"message":"402","line":6,"column":3,"nodeType":"393","messageId":"394","endLine":6,"endColumn":12},{"ruleId":"391","severity":1,"message":"446","line":13,"column":3,"nodeType":"393","messageId":"394","endLine":13,"endColumn":11},{"ruleId":"391","severity":1,"message":"470","line":27,"column":3,"nodeType":"393","messageId":"394","endLine":27,"endColumn":14},{"ruleId":"391","severity":1,"message":"471","line":28,"column":3,"nodeType":"393","messageId":"394","endLine":28,"endColumn":14},{"ruleId":"409","severity":1,"message":"458","line":64,"column":6,"nodeType":"413","endLine":64,"endColumn":8,"suggestions":"472"},{"ruleId":"391","severity":1,"message":"473","line":66,"column":9,"nodeType":"393","messageId":"394","endLine":66,"endColumn":24},{"ruleId":"391","severity":1,"message":"474","line":67,"column":9,"nodeType":"393","messageId":"394","endLine":67,"endColumn":24},{"ruleId":"391","severity":1,"message":"453","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":13},{"ruleId":"391","severity":1,"message":"475","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":18},{"ruleId":"391","severity":1,"message":"476","line":62,"column":9,"nodeType":"393","messageId":"394","endLine":62,"endColumn":16},{"ruleId":"409","severity":1,"message":"458","line":77,"column":6,"nodeType":"413","endLine":77,"endColumn":15,"suggestions":"477"},{"ruleId":"391","severity":1,"message":"436","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":26},{"ruleId":"391","severity":1,"message":"478","line":11,"column":10,"nodeType":"393","messageId":"394","endLine":11,"endColumn":20},{"ruleId":"391","severity":1,"message":"479","line":11,"column":22,"nodeType":"393","messageId":"394","endLine":11,"endColumn":35},{"ruleId":"391","severity":1,"message":"454","line":18,"column":9,"nodeType":"393","messageId":"394","endLine":18,"endColumn":17},{"ruleId":"391","severity":1,"message":"480","line":21,"column":9,"nodeType":"393","messageId":"394","endLine":21,"endColumn":17},{"ruleId":"391","severity":1,"message":"436","line":2,"column":17,"nodeType":"393","messageId":"394","endLine":2,"endColumn":26},{"ruleId":"391","severity":1,"message":"479","line":11,"column":3,"nodeType":"393","messageId":"394","endLine":11,"endColumn":16},{"ruleId":"391","severity":1,"message":"481","line":12,"column":3,"nodeType":"393","messageId":"394","endLine":12,"endColumn":16},{"ruleId":"391","severity":1,"message":"482","line":20,"column":9,"nodeType":"393","messageId":"394","endLine":20,"endColumn":23},{"ruleId":"391","severity":1,"message":"483","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"453","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":13},{"ruleId":"391","severity":1,"message":"470","line":18,"column":3,"nodeType":"393","messageId":"394","endLine":18,"endColumn":14},{"ruleId":"409","severity":1,"message":"484","line":36,"column":6,"nodeType":"413","endLine":36,"endColumn":8,"suggestions":"485"},{"ruleId":"391","severity":1,"message":"486","line":5,"column":3,"nodeType":"393","messageId":"394","endLine":5,"endColumn":10},{"ruleId":"391","severity":1,"message":"404","line":9,"column":3,"nodeType":"393","messageId":"394","endLine":9,"endColumn":13},{"ruleId":"409","severity":1,"message":"487","line":29,"column":6,"nodeType":"413","endLine":29,"endColumn":8,"suggestions":"488"},{"ruleId":"391","severity":1,"message":"436","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":26},{"ruleId":"391","severity":1,"message":"470","line":19,"column":10,"nodeType":"393","messageId":"394","endLine":19,"endColumn":21},{"ruleId":"391","severity":1,"message":"489","line":24,"column":45,"nodeType":"393","messageId":"394","endLine":24,"endColumn":60},{"ruleId":"391","severity":1,"message":"490","line":32,"column":10,"nodeType":"393","messageId":"394","endLine":32,"endColumn":27},{"ruleId":"391","severity":1,"message":"491","line":32,"column":29,"nodeType":"393","messageId":"394","endLine":32,"endColumn":49},{"ruleId":"391","severity":1,"message":"492","line":36,"column":9,"nodeType":"393","messageId":"394","endLine":36,"endColumn":21},{"ruleId":"391","severity":1,"message":"454","line":42,"column":9,"nodeType":"393","messageId":"394","endLine":42,"endColumn":17},{"ruleId":"391","severity":1,"message":"493","line":45,"column":9,"nodeType":"393","messageId":"394","endLine":45,"endColumn":19},{"ruleId":"391","severity":1,"message":"494","line":88,"column":9,"nodeType":"393","messageId":"394","endLine":88,"endColumn":15},{"ruleId":"391","severity":1,"message":"483","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":25},{"ruleId":"391","severity":1,"message":"436","line":1,"column":27,"nodeType":"393","messageId":"394","endLine":1,"endColumn":36},{"ruleId":"391","severity":1,"message":"422","line":2,"column":34,"nodeType":"393","messageId":"394","endLine":2,"endColumn":39},{"ruleId":"391","severity":1,"message":"452","line":4,"column":10,"nodeType":"393","messageId":"394","endLine":4,"endColumn":21},{"ruleId":"391","severity":1,"message":"415","line":4,"column":23,"nodeType":"393","messageId":"394","endLine":4,"endColumn":34},{"ruleId":"391","severity":1,"message":"403","line":6,"column":3,"nodeType":"393","messageId":"394","endLine":6,"endColumn":6},{"ruleId":"391","severity":1,"message":"404","line":8,"column":3,"nodeType":"393","messageId":"394","endLine":8,"endColumn":13},{"ruleId":"391","severity":1,"message":"495","line":24,"column":9,"nodeType":"393","messageId":"394","endLine":24,"endColumn":20},{"ruleId":"391","severity":1,"message":"406","line":26,"column":10,"nodeType":"393","messageId":"394","endLine":26,"endColumn":18},{"ruleId":"391","severity":1,"message":"407","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":18},{"ruleId":"391","severity":1,"message":"408","line":28,"column":10,"nodeType":"393","messageId":"394","endLine":28,"endColumn":19},{"ruleId":"391","severity":1,"message":"496","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":13},{"ruleId":"391","severity":1,"message":"453","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":13},{"ruleId":"391","severity":1,"message":"497","line":5,"column":8,"nodeType":"393","messageId":"394","endLine":5,"endColumn":15},{"ruleId":"391","severity":1,"message":"498","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":23},{"ruleId":"391","severity":1,"message":"499","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":16},{"ruleId":"391","severity":1,"message":"500","line":60,"column":19,"nodeType":"393","messageId":"394","endLine":60,"endColumn":29},{"ruleId":"409","severity":1,"message":"458","line":70,"column":6,"nodeType":"413","endLine":70,"endColumn":15,"suggestions":"501"},{"ruleId":"391","severity":1,"message":"497","line":5,"column":8,"nodeType":"393","messageId":"394","endLine":5,"endColumn":15},{"ruleId":"391","severity":1,"message":"498","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":23},{"ruleId":"391","severity":1,"message":"452","line":24,"column":23,"nodeType":"393","messageId":"394","endLine":24,"endColumn":34},{"ruleId":"391","severity":1,"message":"502","line":26,"column":10,"nodeType":"393","messageId":"394","endLine":26,"endColumn":26},{"ruleId":"391","severity":1,"message":"499","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":16},{"ruleId":"391","severity":1,"message":"503","line":56,"column":21,"nodeType":"393","messageId":"394","endLine":56,"endColumn":33},{"ruleId":"504","severity":2,"message":"505","line":56,"column":37,"nodeType":"393","endLine":56,"endColumn":45},{"ruleId":"504","severity":2,"message":"505","line":59,"column":33,"nodeType":"393","endLine":59,"endColumn":41},{"ruleId":"391","severity":1,"message":"454","line":60,"column":9,"nodeType":"393","messageId":"394","endLine":60,"endColumn":17},{"ruleId":"504","severity":2,"message":"506","line":60,"column":20,"nodeType":"393","endLine":60,"endColumn":31},{"ruleId":"507","severity":2,"message":"508","line":62,"column":15,"nodeType":"393","messageId":"509","endLine":62,"endColumn":23},{"ruleId":"504","severity":2,"message":"510","line":63,"column":3,"nodeType":"393","endLine":63,"endColumn":12},{"ruleId":"391","severity":1,"message":"497","line":5,"column":8,"nodeType":"393","messageId":"394","endLine":5,"endColumn":15},{"ruleId":"391","severity":1,"message":"498","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":23},{"ruleId":"391","severity":1,"message":"452","line":24,"column":23,"nodeType":"393","messageId":"394","endLine":24,"endColumn":34},{"ruleId":"391","severity":1,"message":"502","line":26,"column":10,"nodeType":"393","messageId":"394","endLine":26,"endColumn":26},{"ruleId":"391","severity":1,"message":"499","line":27,"column":10,"nodeType":"393","messageId":"394","endLine":27,"endColumn":16},{"ruleId":"391","severity":1,"message":"503","line":56,"column":21,"nodeType":"393","messageId":"394","endLine":56,"endColumn":33},{"ruleId":"391","severity":1,"message":"454","line":60,"column":9,"nodeType":"393","messageId":"394","endLine":60,"endColumn":17},"no-native-reassign",["511"],"no-negated-in-lhs",["512"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Footer' is defined but never used.","'token' is assigned a value but never used.",["511"],["512"],"'BookService' is defined but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'Checkbox' is defined but never used.","'response' is assigned a value but never used.","'snackbar' is assigned a value but never used.","'snackType' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'Token' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["513"],"'useDispatch' is defined but never used.","'signupStatus' is assigned a value but never used.","'setSignupStatus' is assigned a value but never used.",["514"],"'Hero' is defined but never used.","'FaHiking' is defined but never used.","'FaBeer' is defined but never used.","'Badge' is defined but never used.","'AiOutlineShoppingCart' is defined but never used.","'userData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'BrowserRouter' is defined but never used.","'ProductsTable' is defined but never used.","'role' is assigned a value but never used.","no-useless-rename","Destructuring assignment isAuth unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"515","text":"516"},"'useEffect' is defined but never used.","'useCustomForm' is defined but never used.","'ProfilePic' is defined but never used.","'ChangePassword' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputAdornment' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'BsSearch' is defined but never used.","'Select' is defined but never used.","'Menu' is defined but never used.","'List' is defined but never used.","'useSelector' is defined but never used.","'axios' is defined but never used.","'dispatch' is assigned a value but never used.","'Moment' is defined but never used.","'CustomDatePicker' is assigned a value but never used.","'staffs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["517"],"'AiFillShop' is defined but never used.","'SiProducthunt' is defined but never used.","'SiGooglecalendar' is defined but never used.","'RiScissors2Fill' is defined but never used.","'FaUserCircle' is defined but never used.","'FaShoppingBag' is defined but never used.","'GiShoppingCart' is defined but never used.","no-dupe-keys","Duplicate key 'cart'.","ObjectExpression","'fetchStaffs' is defined but never used.","'demoteStaff' is defined but never used.",["518"],"'staffsAvailable' is assigned a value but never used.","'adminsAvailable' is assigned a value but never used.","'BiSleepy' is defined but never used.","'loading' is assigned a value but never used.",["519"],"'addService' is defined but never used.","'fetchServices' is defined but never used.","'services' is assigned a value but never used.","'updateService' is defined but never used.","'updatedService' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userData'. Either include them or remove the dependency array.",["520"],"'Toolbar' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["521"],"'CustomTextField' is assigned a value but never used.","'choosenSpecialist' is assigned a value but never used.","'setChoosenSpecialist' is assigned a value but never used.","'appointments' is assigned a value but never used.","'specialist' is assigned a value but never used.","'timeId' is defined but never used.","'bookingCart' is assigned a value but never used.","'React' is defined but never used.","'AddItem' is defined but never used.","'useTableActions' is defined but never used.","'moment' is defined but never used.","'setRecords' is assigned a value but never used.",["522"],"'fetchAppointment' is defined but never used.","'setIsLoading' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"userTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useDispatch\" is called in function \"userTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'services' is not defined.","undef","React Hook \"useEffect\" is called in function \"userTable\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-global-assign","no-unsafe-negation",{"desc":"523","fix":"524"},{"desc":"523","fix":"525"},[259,273],"isAuth",{"desc":"526","fix":"527"},{"desc":"526","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"529","fix":"535"},"Update the dependencies array to be: [Token, history]",{"range":"536","text":"537"},{"range":"538","text":"537"},"Update the dependencies array to be: [dispatch]",{"range":"539","text":"540"},{"range":"541","text":"540"},"Update the dependencies array to be: [dispatch, records]",{"range":"542","text":"543"},"Update the dependencies array to be: [dispatch, userData]",{"range":"544","text":"545"},"Update the dependencies array to be: [userId]",{"range":"546","text":"547"},{"range":"548","text":"543"},[2837,2839],"[Token, history]",[2266,2268],[835,837],"[dispatch]",[1687,1689],[3338,3347],"[dispatch, records]",[908,910],"[dispatch, userData]",[862,864],"[userId]",[3043,3052]]